<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.complaint.dao.TaskDao">
  <sql id="Base_Column_List">
    t.id,
    t.serialno, 
    t.create_date as create_date, 
   <!--t.request_datetime as requestDatetime, -->
   <!--t.accept_human as acceptHuman, -->
   <!--t.complaint_channels as complaintChannels, -->
   <!--t.admissible_path as admissiblePath, -->
   <!--t.product_name as productName, -->
   <!--t.complaint, -->
   <!--t.template_content as templateContent, -->
   <!--t.channel_problems as channelProblems, -->
    t.test_address as test_address, 
   <!--t.attribution,  -->
    <!-- t.area_id as accountAttribution, --> 
   <!--t.acceptance_number as acceptanceNumber, -->
    <!--t.users_brand as usersBrand, -->
    <!--t.customer_contact as customerContact, -->
    t.area_id as areaid, 
    t.net_worktype as networktype, 
    t.test_number as num,
    <!--t.process_sta as processStatus, -->
    <!--t.isdeal as isDeal, -->
    t.handler_time as handlertime,
    t.break_flag as breakflag
  </sql>
  
    <!-- 工单表WHERE条件 -->
  <sql id="where_sql"> 
       <!-- 时间 -->
        <if test="datatype!=null and datatype==1">
				<if test="startTime != null">
					and t.create_date &gt;= to_date(#{startTime},'yyyy-mm-dd hh24:mi:ss')
				</if>
				<if test="endTime != null">
					and t.create_date &lt;= to_date(#{endTime},'yyyy-mm-dd hh24:mi:ss')
				</if>
				
			<!-- 地址或工单 -->
				    <if test="serialno!=null and serialno!=''">
				    and (t.serialno like '%' ||  #{serialno} || '%'  or c.test_adress like '%' ||  #{serialno} || '%')
				    </if>
			</if>
			
			<!-- 环境 -->
			<if test="inside!=null and inside!=-1">
             and c.inside=#{inside}
           </if>
			<!-- 任务类型 -->
			<if test="jobtype!=null and jobtype!=-1">
     
            </if>
			<!-- 网络制式 -->
			<if test="nettype!=-1">
			 <if test="nettype==1">
		      and (c.net_type=2 or c.net_type=3)
		     </if>
		     <if test="nettype==2">
		      and (c.net_type=1 or c.net_type=3)
		     </if>
			</if>
			 <!-- 测试网络 -->
		    <if test="testnet!='-1' and testnet!=null">
		     and instr(','||#{testnet}||',',','||c.net_type||',')>0 
		    </if>
			    <!-- 业务类型 -->
				    <if test="testtype!=null and bustype!=-1">
					    and(
					    <if test="tt!=null">
					      instr(','||#{tt}||',',','||c.test_type||',')>0 
					    </if>
					     <if test="yy!=null">
					       or instr(','||#{yy}||',',','||c.call_type||',')>0 
					     </if>
					      <if test="ff!=null">
					      or  instr(','||#{ff}||',',','||c.ftp_type||',')>0 
					     </if>
					     )
				    </if>
				
				    <!-- 场景 -->
				    <if test="senceids!=null and stype!=-1">
				    and instr(','||#{senceids}||',',','||c.sceneid||',')>0 
				    </if>
  </sql>
      <!-- 结果集WHERE条件 -->
  <sql id="where_sql_test"> 
       <!-- 时间 -->
				<if test="datatype!=null and datatype==2">
				<if test="startTime != null">
					and m.test_time &gt;= to_date(#{startTime},'yyyy-mm-dd hh24:mi:ss')
				</if>
				<if test="endTime != null">
					and m.test_time &lt;= to_date(#{endTime},'yyyy-mm-dd hh24:mi:ss')
				</if>
				
					<!-- 地址或工单 -->
				    <if test="serialno!=null and serialno!=''">
				    and (m.serialno like '%' ||  #{serialno} || '%'  or m.test_adress like '%' ||  #{serialno} || '%')
				    </if>
			</if>
			
			<!-- 环境 -->
			<if test="inside!=null and inside!=-1">
             and m.inside=#{inside}
           </if>
			<!-- 任务类型 -->
			<if test="jobtype!=null and jobtype!=-1">
     
            </if>
			<!-- 网络制式 -->
			<if test="nettype!=-1">
			 <if test="nettype==1">
		      and (m.net_type=2 or m.net_type=3)
		     </if>
		     <if test="nettype==2">
		      and (m.net_type=1 or m.net_type=3)
		     </if>
			</if>
			 <!-- 测试网络 -->
		    <if test="testnet!='-1' and testnet!=null">
		     and instr(','||#{testnet}||',',','||m.net_type||',')>0 
		    </if>
			    <!-- 业务类型 -->
				    <if test="testtype!=null and bustype!=-1">
					    and(
					    <if test="tt!=null">
					      instr(','||#{tt}||',',','||m.test_type||',')>0 
					    </if>
					     <if test="yy!=null">
					       or instr(','||#{yy}||',',','||m.call_type||',')>0 
					     </if>
					      <if test="ff!=null">
					      or  instr(','||#{ff}||',',','||m.ftp_type||',')>0 
					     </if>
					     )
				    </if>
				
				    <!-- 场景 -->
				    <if test="senceids!=null and stype!=-1">
				    and instr(','||#{senceids}||',',','||m.sceneid||',')>0 
				    </if>
		
  </sql>
  <select id="queryWorkOrderList" parameterType="map" resultType="com.complaint.model.TestWorkOrder">
	  select * from (
		select a.*,rownum rn  from (
			select 
			<include refid="Base_Column_List" /> , c.test_time testtime,c.test_phone testphone,d.areaname
			 from (select  e.id id,
					       e.serialno serialno,
					       e.areaid area_id,
					       e.net_worktype net_worktype,
					       e.break_flag break_flag,
					       e.test_address test_address,
					       e.create_date create_date,
					       e.handler handler,
					       e.handler_time handler_time,
					       e.is_verify is_verify,
					       e.valid_state valid_state,
					       nvl(count(a.flowid), 0) test_number
					  from t_task_etl e, t_log_manual_task a
					 where a.id(+) = e.id
					   and e.valid_state = 0 
					   and e.areaid in (select areaid from t_user_area where
					   1=1 
					   <if test="userid!=null">
					   and userid = #{userid}
					   </if>)
					 group by e.id,
					          e.serialno,
					          e.areaid,
					          e.net_worktype,
					          e.break_flag,
					          e.test_address,
					          e.create_date,
					          e.handler,
					          e.handler_time,
					          e.is_verify,
					          e.valid_state) t,
			  	(select *
                              from (select m.*,
                                           row_number() over(partition by m.id,m.serialno order by m.test_time desc) rw
                                      from t_log_manual_task m where 1=1 <include refid="where_sql_test"/>
                                     order by m.test_time desc)
                             where rw = 1) c,t_area_code d 
                  <if test="datatype!=null and datatype==1">
                  where t.id = c.id(+) 
                  and t.serialno = c.serialno(+)
                  and t.area_id = d.areaid(+)
                  </if>
                  <if test="breakflag!=null and breakflag!=-1">
                  and break_flag = #{breakflag}
                  </if>
                   <if test="datatype!=null and datatype==2">
                  where t.id = c.id 
                  and t.serialno = c.serialno
                  and t.area_id = d.areaid
                  </if>
                  and 1 = 1
			      and instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(t.area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
       <include refid="where_sql"/>
			<if test="s_id != null and s_id != '' ">		
				and t.ID  = #{s_id} 
			</if>
			<if test="isDeal != null and isDeal != -1" >
				<if test="isDeal == 1">
					and t.test_number &gt;=1
				</if>
				<if test="isDeal == 0">
					and t.test_number &lt;= 0
				</if>
			</if>
			<if test="testphone != null and testphone != ''">
				and c.test_phone like '%' ||  #{testphone} || '%'
			</if>
            <if test="verify != null and verify != -1" >
				and t.is_verify =#{verify}
            </if>
			order by t.create_date DESC ) a 
		where rownum &lt;= #{mbound} ) 
	  where rn &gt; #{lbound}
  </select>
  <select id="countWorkOrderList" parameterType="map" resultType="java.lang.Integer">
			select 	count(0)
			 from (select  e.id id,
					       e.serialno serialno,
					       e.areaid area_id,
					       e.net_worktype net_worktype,
					       e.break_flag break_flag,
					       e.test_address test_address,
					       e.create_date create_date,
					       e.handler handler,
					       e.handler_time handler_time,
					       e.is_verify is_verify,
					       e.valid_state valid_state,
					       nvl(count(a.flowid), 0) test_number
					  from t_task_etl e, t_log_manual_task a
					 where a.id(+) = e.id
					   and e.valid_state = 0 
					   and e.areaid in (select areaid from t_user_area where
					   1=1 
					   <if test="userid!=null">
					   and userid = #{userid}
					   </if>)
					 group by e.id,
					          e.serialno,
					          e.areaid,
					          e.net_worktype,
					          e.break_flag,
					          e.test_address,
					          e.create_date,
					          e.handler,
					          e.handler_time,
					          e.is_verify,
					          e.valid_state) t,
			  	(select *
                              from (select m.*,
                                           row_number() over(partition by m.id,m.serialno order by m.test_time desc) rw
                                      from t_log_manual_task m where 1=1 <include refid="where_sql_test"/>
                                     order by m.test_time desc)
                             where rw = 1) c,t_area_code d 
                   <if test="datatype!=null and datatype==1">
                  where t.id = c.id(+) 
                  and t.serialno = c.serialno(+)
                  and t.area_id = d.areaid(+)
                  </if>
                  <if test="breakflag!=null and breakflag!=-1">
                  and break_flag = #{breakflag}
                  </if>
                   <if test="datatype!=null and datatype==2">
                  where t.id = c.id 
                  and t.serialno = c.serialno
                  and t.area_id = d.areaid
                  </if>
			 	and instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(t.area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
		<include refid="where_sql"/>
			<if test="s_id != null and s_id != '' ">		
				and t.ID  = #{s_id} 
			</if>
			<if test="isDeal != null and isDeal != -1" >
				<if test="isDeal == 1">
					and t.test_number &gt;=1
				</if>
				<if test="isDeal == 0">
					and t.test_number &lt;= 0
				</if>
			</if>
			<if test="verify != null and verify != -1">
				and t.is_verify = #{verify}
			</if>
			<if test="testphone != null and testphone != ''">
				and c.test_phone like '%' ||  #{testphone} || '%'
			</if>
			order by t.create_date Desc 
  </select>
  <select id="queryAllArea" resultType="com.complaint.model.TestWorkOrder" parameterType="java.lang.Integer">
  		select t.areaid, t.areaname
				  from t_area_code t ,t_user_area a
				 where t.areaid not in ('863450', '863451', '863452')
				       and a.userid = #{userid}
				       and t.areaid(+) = a.areaid
				 order by t.areaid asc
  </select>
</mapper>
