<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.complaint.dao.BaseStationDao">
     <resultMap id="BaseResultMap" type="com.complaint.model.GwCasCell">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="CID" jdbcType="DECIMAL" property="cid" />
    <id column="LAC" jdbcType="DECIMAL" property="lac" />
    <result column="CITY_NAME" jdbcType="VARCHAR" property="cityName" />
    <result column="ADMIN_REGION" jdbcType="VARCHAR" property="adminRegion" />
    <result column="AREA_ID" jdbcType="DECIMAL" property="areaId" />
    <result column="BID" jdbcType="VARCHAR" property="bid" />
    <result column="BASE_NAME" jdbcType="VARCHAR" property="baseName" />
    <result column="CELL_NAME" jdbcType="VARCHAR" property="cellName" />
    <result column="LONGITUDE" jdbcType="DECIMAL" property="longitude" />
    <result column="LATITUDE" jdbcType="DECIMAL" property="latitude" />
    <result column="LONGITUDE_MODIFY" jdbcType="DECIMAL" property="longitudeModify" />
    <result column="LATITUDE_MODIFY" jdbcType="DECIMAL" property="latitudeModify" />
    <result column="PSC" jdbcType="DECIMAL" property="psc" />
    <result column="SELF_AZIMUTH" jdbcType="DECIMAL" property="selfAzimuth" />
    <result column="MODE_TYPE" jdbcType="DECIMAL" property="modeType" />
    <result column="INDOOR" jdbcType="DECIMAL" property="indoor" />
    <result column="ANT_TYPE" jdbcType="VARCHAR" property="antType" />
    <result column="ANT_AZIMUTH" jdbcType="DECIMAL" property="antAzimuth" />
    <result column="ANT_HIGH" jdbcType="DECIMAL" property="antHigh" />
    <result column="ANT_ELECT_ANGLE" jdbcType="DECIMAL" property="antElectAngle" />
    <result column="ANT_MACH_ANGLE" jdbcType="DECIMAL" property="antMachAngle" />
    <result column="SHARED_ANT" jdbcType="VARCHAR" property="sharedAnt" />
    <result column="BASE_ADDRESS" jdbcType="VARCHAR" property="baseAddress" />
    <result column="ALTITUDE" jdbcType="DECIMAL" property="altitude" />
    <result column="DEV_VENDOR" jdbcType="VARCHAR" property="devVendor" />
    <result column="TOWER_MAST_TYPE" jdbcType="VARCHAR" property="towerMastType" />
    <result column="DEV_TYPE" jdbcType="VARCHAR" property="devType" />
    <result column="BASE_CONF" jdbcType="VARCHAR" property="baseConf" />
    <result column="PROGRESS" jdbcType="VARCHAR" property="progress" />
    <result column="COVER_RANGE" jdbcType="VARCHAR" property="coverRange" />
    <result column="COVER_TYPE" jdbcType="VARCHAR" property="coverType" />
    <result column="RRU_CELL_BOOL" jdbcType="VARCHAR" property="rruCellBool" />
    <result column="CELL_ID" jdbcType="DECIMAL" property="cellId" />
    <result column="REPEATER_CNT" jdbcType="DECIMAL" property="repeaterCnt" />
    <result column="SHARED_ANT_CELL" jdbcType="VARCHAR" property="sharedAntCell" />
    <result column="SHARED_ANT_CELL_BAK" jdbcType="VARCHAR" property="sharedAntCellBak" />
    <result column="SHARED_ANT_PROP" jdbcType="VARCHAR" property="sharedAntProp" />
    <result column="SHARED_BASE_NAME" jdbcType="VARCHAR" property="sharedBaseName" />
    <result column="SHARED_BASE_PROP" jdbcType="VARCHAR" property="sharedBaseProp" />
    <result column="NETMAN_STAT" jdbcType="VARCHAR" property="netmanStat" />
    <result column="ADMIN_REGION_TYPE" jdbcType="VARCHAR" property="adminRegionType" />
    <result column="UP_FREQ" jdbcType="DECIMAL" property="upFreq" />
    <result column="DOWN_FREQ" jdbcType="DECIMAL" property="downFreq" />
    <result column="RNC_NAME" jdbcType="VARCHAR" property="rncName" />
    <result column="NE_TYPE" jdbcType="VARCHAR" property="neType" />
    <result column="ANT_POWER" jdbcType="DECIMAL" property="antPower" />
    <result column="TILT" jdbcType="DECIMAL" property="tilt" />
    <result column="ESC_BOOL" jdbcType="VARCHAR" property="escBool" />
    <result column="BASE_TYPE" jdbcType="VARCHAR" property="baseType" />
    <result column="RRU_CNT" jdbcType="DECIMAL" property="rruCnt" />
    <result column="LOGIC_CELL_LEVEL" jdbcType="VARCHAR" property="logicCellLevel" />
    <result column="SECTOR_WIFI_CAPAC" jdbcType="DECIMAL" property="sectorWifiCapac" />
    <result column="E1_CNT" jdbcType="DECIMAL" property="e1Cnt" />
    <result column="FE_CNT" jdbcType="DECIMAL" property="feCnt" />
    <result column="TRANSMISSION" jdbcType="VARCHAR" property="transmission" />
    <result column="CQ_AREA_COVER" jdbcType="VARCHAR" property="cqAreaCover" />
    <result column="WIFI_CAPAC" jdbcType="DECIMAL" property="wifiCapac" />
    <result column="BASE_MAX_POWER" jdbcType="DECIMAL" property="baseMaxPower" />
    <result column="INNER_TILT" jdbcType="DECIMAL" property="innerTilt" />
    <result column="OFF_SERVICE_TIME" jdbcType="TIMESTAMP" property="offServiceTime" />
    <result column="DOWN_MAX_POWER" jdbcType="DECIMAL" property="downMaxPower" />
    <result column="SCENE_A" jdbcType="VARCHAR" property="sceneA" />
    <result column="SCENE_B" jdbcType="VARCHAR" property="sceneB" />
    <result column="TOWN_BOOL" jdbcType="VARCHAR" property="townBool" />
    <result column="HSDPA_BOOL" jdbcType="VARCHAR" property="hsdpaBool" />
    <result column="HSDPA_STAT" jdbcType="VARCHAR" property="hsdpaStat" />
    <result column="HS_PDSCH_CODE" jdbcType="VARCHAR" property="hsPdschCode" />
    <result column="BROADCAST_CHANN_POWER" jdbcType="DECIMAL" property="broadcastChannPower" />
    <result column="HSUPA_BOOL" jdbcType="VARCHAR" property="hsupaBool" />
    <result column="HSUPA_STAT" jdbcType="VARCHAR" property="hsupaStat" />
    <result column="MBMS_BOOL" jdbcType="VARCHAR" property="mbmsBool" />
    <result column="MBMS_STAT" jdbcType="VARCHAR" property="mbmsStat" />
    <result column="MICH_CHANN_CNT" jdbcType="DECIMAL" property="michChannCnt" />
    <result column="SF16_CODE_CNT" jdbcType="DECIMAL" property="sf16CodeCnt" />
    <result column="SF128_CODE_CNT" jdbcType="DECIMAL" property="sf128CodeCnt" />
    <result column="E_AGCH_CHANN_CNT" jdbcType="DECIMAL" property="eAgchChannCnt" />
    <result column="E_RGCH_E_HICH_CHANN_CNT" jdbcType="DECIMAL" property="eRgchEHichChannCnt" />
    <result column="PCPICH_CHANN_MAX_POWER" jdbcType="DECIMAL" property="pcpichChannMaxPower" />
    <result column="PCPICH_CHANN_MIN_POWER" jdbcType="DECIMAL" property="pcpichChannMinPower" />
    <result column="DOMIN_FREQ_CHANN_POWER" jdbcType="DECIMAL" property="dominFreqChannPower" />
    <result column="SYNC_CHANN_DOWN_POWER" jdbcType="DECIMAL" property="syncChannDownPower" />
    <result column="SINGLE_CARR_FREQ_MAX_USER" jdbcType="DECIMAL" property="singleCarrFreqMaxUser" />
    <result column="CARR_FREQ_POWER" jdbcType="DECIMAL" property="carrFreqPower" />
    <result column="UP_CE_CAPAC" jdbcType="DECIMAL" property="upCeCapac" />
    <result column="DOWN_CE_CAPAC" jdbcType="DECIMAL" property="downCeCapac" />
    <result column="IUB_ATM_BANDWIDTH" jdbcType="DECIMAL" property="iubAtmBandwidth" />
    <result column="IUB_IP_BANDWIDTH" jdbcType="DECIMAL" property="iubIpBandwidth" />
    <result column="IU_ATM_BANDWIDTH" jdbcType="DECIMAL" property="iuAtmBandwidth" />
    <result column="IU_IP_BANDWIDTH" jdbcType="DECIMAL" property="iuIpBandwidth" />
    <result column="IUR_ATM_BANDWIDTH" jdbcType="DECIMAL" property="iurAtmBandwidth" />
    <result column="IUR_IP_BANDWIDTH" jdbcType="DECIMAL" property="iurIpBandwidth" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="LAST_UPDATE_TIME" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="RAC" jdbcType="DECIMAL" property="rac" />
    <result column="SAC" jdbcType="DECIMAL" property="sac" />
    <result column="RNC_ID" jdbcType="DECIMAL" property="rncId" />
    <result column="BASE_ID" jdbcType="DECIMAL" property="baseId" />
    <result column="URA_ID" jdbcType="DECIMAL" property="uraId" />
    <result column="TOWER_AMPLI_BOOL" jdbcType="VARCHAR" property="towerAmpliBool" />
    <result column="SECTOR_ID" jdbcType="DECIMAL" property="sectorId" />
    <result column="NETWORK_TIME" jdbcType="TIMESTAMP" property="networkTime" />
    <result column="VIP_BASE" jdbcType="VARCHAR" property="vipBase" />
    <result column="INSIDE" jdbcType="VARCHAR" property="inside" />
    <result column="BSC_NAME" jdbcType="VARCHAR" property="bscName" />
    <result column="PROVINCE" jdbcType="VARCHAR" property="province" />
    <result column="DEV_MODEL" jdbcType="VARCHAR" property="devModel" />
    <result column="CABINET_TYPE" jdbcType="VARCHAR" property="cabinetType" />
    <result column="CARRIER_TYPE" jdbcType="VARCHAR" property="carrierType" />
    <result column="SHARED_FEEDER" jdbcType="VARCHAR" property="sharedFeeder" />
    <result column="SHARED_PLATFORM" jdbcType="VARCHAR" property="sharedPlatform" />
    <result column="CELL_BAND" jdbcType="DECIMAL" property="cellBand" />
    <result column="CELL_MARK" jdbcType="VARCHAR" property="cellMark" />
    <result column="BSIC" jdbcType="DECIMAL" property="bsic" />
    <result column="TCH_FREQ" jdbcType="VARCHAR" property="tchFreq" />
    <result column="CARR_FREQ_CNT" jdbcType="DECIMAL" property="carrFreqCnt" />
    <result column="CARR_FREQ_AVAIL_CNT" jdbcType="DECIMAL" property="carrFreqAvailCnt" />
    <result column="CARR_FREQ_MAX_POWER" jdbcType="DECIMAL" property="carrFreqMaxPower" />
    <result column="CTRL_CHANN_CNT" jdbcType="DECIMAL" property="ctrlChannCnt" />
    <result column="BUSI_CHANN_CNT" jdbcType="DECIMAL" property="busiChannCnt" />
    <result column="SDCCH_AVAIL_CNT" jdbcType="DECIMAL" property="sdcchAvailCnt" />
    <result column="ANT_ELEV_ANGLE" jdbcType="DECIMAL" property="antElevAngle" />
    <result column="HOPPING_PATTERN" jdbcType="VARCHAR" property="hoppingPattern" />
    <result column="HALF_RATE_BOOL" jdbcType="VARCHAR" property="halfRateBool" />
    <result column="GPRS_BOOL" jdbcType="VARCHAR" property="gprsBool" />
    <result column="EDGE_BOOL" jdbcType="VARCHAR" property="edgeBool" />
    <result column="ENFULL_RATE_BOOL" jdbcType="VARCHAR" property="enfullRateBool" />
    <result column="WCDMA_NEAR_CELL1" jdbcType="VARCHAR" property="wcdmaNearCell1" />
    <result column="WCDMA_NEAR_CELL2" jdbcType="VARCHAR" property="wcdmaNearCell2" />
    <result column="WCDMA_NEAR_CELL3" jdbcType="VARCHAR" property="wcdmaNearCell3" />
    <result column="WCDMA_NEAR_CELL4" jdbcType="VARCHAR" property="wcdmaNearCell4" />
    <result column="WCDMA_NEAR_CELL5" jdbcType="VARCHAR" property="wcdmaNearCell5" />
    <result column="WCDMA_NEAR_CELL6" jdbcType="VARCHAR" property="wcdmaNearCell6" />
    <result column="WCDMA_NEAR_CELL7" jdbcType="VARCHAR" property="wcdmaNearCell7" />
    <result column="WCDMA_NEAR_CELL8" jdbcType="VARCHAR" property="wcdmaNearCell8" />
    <result column="WCDMA_NEAR_CELL9" jdbcType="VARCHAR" property="wcdmaNearCell9" />
    <result column="WCDMA_NEAR_CELL10" jdbcType="VARCHAR" property="wcdmaNearCell10" />
    <result column="WCDMA_NEAR_CELL11" jdbcType="VARCHAR" property="wcdmaNearCell11" />
    <result column="WCDMA_NEAR_CELL12" jdbcType="VARCHAR" property="wcdmaNearCell12" />
    <result column="WCDMA_NEAR_CELL13" jdbcType="VARCHAR" property="wcdmaNearCell13" />
    <result column="WCDMA_NEAR_CELL14" jdbcType="VARCHAR" property="wcdmaNearCell14" />
    <result column="WCDMA_NEAR_CELL15" jdbcType="VARCHAR" property="wcdmaNearCell15" />
    <result column="WCDMA_NEAR_CELL16" jdbcType="VARCHAR" property="wcdmaNearCell16" />
    <result column="WCDMA_NEAR_CELL17" jdbcType="VARCHAR" property="wcdmaNearCell17" />
    <result column="WCDMA_NEAR_CELL18" jdbcType="VARCHAR" property="wcdmaNearCell18" />
    <result column="WCDMA_NEAR_CELL19" jdbcType="VARCHAR" property="wcdmaNearCell19" />
    <result column="WCDMA_NEAR_CELL20" jdbcType="VARCHAR" property="wcdmaNearCell20" />
    <result column="WCDMA_NEAR_CELL21" jdbcType="VARCHAR" property="wcdmaNearCell21" />
    <result column="WCDMA_NEAR_CELL22" jdbcType="VARCHAR" property="wcdmaNearCell22" />
    <result column="WCDMA_NEAR_CELL23" jdbcType="VARCHAR" property="wcdmaNearCell23" />
    <result column="WCDMA_NEAR_CELL24" jdbcType="VARCHAR" property="wcdmaNearCell24" />
    <result column="WCDMA_NEAR_CELL25" jdbcType="VARCHAR" property="wcdmaNearCell25" />
    <result column="WCDMA_NEAR_CELL26" jdbcType="VARCHAR" property="wcdmaNearCell26" />
    <result column="WCDMA_NEAR_CELL27" jdbcType="VARCHAR" property="wcdmaNearCell27" />
    <result column="WCDMA_NEAR_CELL28" jdbcType="VARCHAR" property="wcdmaNearCell28" />
    <result column="WCDMA_NEAR_CELL29" jdbcType="VARCHAR" property="wcdmaNearCell29" />
    <result column="WCDMA_NEAR_CELL30" jdbcType="VARCHAR" property="wcdmaNearCell30" />
    <result column="WCDMA_NEAR_CELL31" jdbcType="VARCHAR" property="wcdmaNearCell31" />
    <result column="WCDMA_NEAR_CELL32" jdbcType="VARCHAR" property="wcdmaNearCell32" />
    <result column="WCDMA_NEAR_CELL33" jdbcType="VARCHAR" property="wcdmaNearCell33" />
    <result column="WCDMA_NEAR_CELL34" jdbcType="VARCHAR" property="wcdmaNearCell34" />
    <result column="WCDMA_NEAR_CELL35" jdbcType="VARCHAR" property="wcdmaNearCell35" />
    <result column="WCDMA_NEAR_CELL36" jdbcType="VARCHAR" property="wcdmaNearCell36" />
    <result column="WCDMA_NEAR_CELL37" jdbcType="VARCHAR" property="wcdmaNearCell37" />
    <result column="WCDMA_NEAR_CELL38" jdbcType="VARCHAR" property="wcdmaNearCell38" />
    <result column="WCDMA_NEAR_CELL39" jdbcType="VARCHAR" property="wcdmaNearCell39" />
    <result column="WCDMA_NEAR_CELL40" jdbcType="VARCHAR" property="wcdmaNearCell40" />
    <result column="WCDMA_NEAR_CELL41" jdbcType="VARCHAR" property="wcdmaNearCell41" />
    <result column="WCDMA_NEAR_CELL42" jdbcType="VARCHAR" property="wcdmaNearCell42" />
    <result column="WCDMA_NEAR_CELL43" jdbcType="VARCHAR" property="wcdmaNearCell43" />
    <result column="WCDMA_NEAR_CELL44" jdbcType="VARCHAR" property="wcdmaNearCell44" />
    <result column="WCDMA_NEAR_CELL45" jdbcType="VARCHAR" property="wcdmaNearCell45" />
    <result column="WCDMA_NEAR_CELL46" jdbcType="VARCHAR" property="wcdmaNearCell46" />
    <result column="WCDMA_NEAR_CELL47" jdbcType="VARCHAR" property="wcdmaNearCell47" />
    <result column="WCDMA_NEAR_CELL48" jdbcType="VARCHAR" property="wcdmaNearCell48" />
    <result column="WCDMA_NEAR_CELL49" jdbcType="VARCHAR" property="wcdmaNearCell49" />
    <result column="WCDMA_NEAR_CELL50" jdbcType="VARCHAR" property="wcdmaNearCell50" />
    <result column="WCDMA_NEAR_CELL51" jdbcType="VARCHAR" property="wcdmaNearCell51" />
    <result column="WCDMA_NEAR_CELL52" jdbcType="VARCHAR" property="wcdmaNearCell52" />
    <result column="WCDMA_NEAR_CELL53" jdbcType="VARCHAR" property="wcdmaNearCell53" />
    <result column="WCDMA_NEAR_CELL54" jdbcType="VARCHAR" property="wcdmaNearCell54" />
    <result column="WCDMA_NEAR_CELL55" jdbcType="VARCHAR" property="wcdmaNearCell55" />
    <result column="WCDMA_NEAR_CELL56" jdbcType="VARCHAR" property="wcdmaNearCell56" />
    <result column="WCDMA_NEAR_CELL57" jdbcType="VARCHAR" property="wcdmaNearCell57" />
    <result column="WCDMA_NEAR_CELL58" jdbcType="VARCHAR" property="wcdmaNearCell58" />
    <result column="WCDMA_NEAR_CELL59" jdbcType="VARCHAR" property="wcdmaNearCell59" />
    <result column="WCDMA_NEAR_CELL60" jdbcType="VARCHAR" property="wcdmaNearCell60" />
    <result column="WCDMA_NEAR_CELL61" jdbcType="VARCHAR" property="wcdmaNearCell61" />
    <result column="WCDMA_NEAR_CELL62" jdbcType="VARCHAR" property="wcdmaNearCell62" />
    <result column="WCDMA_NEAR_CELL63" jdbcType="VARCHAR" property="wcdmaNearCell63" />
    <result column="WCDMA_NEAR_CELL64" jdbcType="VARCHAR" property="wcdmaNearCell64" />
    <result column="GSM_NEAR_CELL1" jdbcType="VARCHAR" property="gsmNearCell1" />
    <result column="GSM_NEAR_CELL2" jdbcType="VARCHAR" property="gsmNearCell2" />
    <result column="GSM_NEAR_CELL3" jdbcType="VARCHAR" property="gsmNearCell3" />
    <result column="GSM_NEAR_CELL4" jdbcType="VARCHAR" property="gsmNearCell4" />
    <result column="GSM_NEAR_CELL5" jdbcType="VARCHAR" property="gsmNearCell5" />
    <result column="GSM_NEAR_CELL6" jdbcType="VARCHAR" property="gsmNearCell6" />
    <result column="GSM_NEAR_CELL7" jdbcType="VARCHAR" property="gsmNearCell7" />
    <result column="GSM_NEAR_CELL8" jdbcType="VARCHAR" property="gsmNearCell8" />
    <result column="GSM_NEAR_CELL9" jdbcType="VARCHAR" property="gsmNearCell9" />
    <result column="GSM_NEAR_CELL10" jdbcType="VARCHAR" property="gsmNearCell10" />
    <result column="GSM_NEAR_CELL11" jdbcType="VARCHAR" property="gsmNearCell11" />
    <result column="GSM_NEAR_CELL12" jdbcType="VARCHAR" property="gsmNearCell12" />
    <result column="GSM_NEAR_CELL13" jdbcType="VARCHAR" property="gsmNearCell13" />
    <result column="GSM_NEAR_CELL14" jdbcType="VARCHAR" property="gsmNearCell14" />
    <result column="GSM_NEAR_CELL15" jdbcType="VARCHAR" property="gsmNearCell15" />
    <result column="GSM_NEAR_CELL16" jdbcType="VARCHAR" property="gsmNearCell16" />
    <result column="GSM_NEAR_CELL17" jdbcType="VARCHAR" property="gsmNearCell17" />
    <result column="GSM_NEAR_CELL18" jdbcType="VARCHAR" property="gsmNearCell18" />
    <result column="GSM_NEAR_CELL19" jdbcType="VARCHAR" property="gsmNearCell19" />
    <result column="GSM_NEAR_CELL20" jdbcType="VARCHAR" property="gsmNearCell20" />
    <result column="GSM_NEAR_CELL21" jdbcType="VARCHAR" property="gsmNearCell21" />
    <result column="GSM_NEAR_CELL22" jdbcType="VARCHAR" property="gsmNearCell22" />
    <result column="GSM_NEAR_CELL23" jdbcType="VARCHAR" property="gsmNearCell23" />
    <result column="GSM_NEAR_CELL24" jdbcType="VARCHAR" property="gsmNearCell24" />
    <result column="GSM_NEAR_CELL25" jdbcType="VARCHAR" property="gsmNearCell25" />
    <result column="GSM_NEAR_CELL26" jdbcType="VARCHAR" property="gsmNearCell26" />
    <result column="GSM_NEAR_CELL27" jdbcType="VARCHAR" property="gsmNearCell27" />
    <result column="GSM_NEAR_CELL28" jdbcType="VARCHAR" property="gsmNearCell28" />
    <result column="GSM_NEAR_CELL29" jdbcType="VARCHAR" property="gsmNearCell29" />
    <result column="GSM_NEAR_CELL30" jdbcType="VARCHAR" property="gsmNearCell30" />
    <result column="GSM_NEAR_CELL31" jdbcType="VARCHAR" property="gsmNearCell31" />
    <result column="GSM_NEAR_CELL32" jdbcType="VARCHAR" property="gsmNearCell32" />
  </resultMap>
    <resultMap id="baseStationDataMap" type="com.complaint.model.BaseStation">
        <id property="bid" column="bid" />
        <!-- <result property="base_name" column="base_name" jdbcType="VARCHAR" javaType="String" />
        <result property="base_area" column="base_area" jdbcType="VARCHAR" javaType="String" /> -->
        <collection property="bsList" ofType="com.complaint.model.TCasCell" column="bid" resultMap="cellDataMap"/>
      </resultMap>
    	
	  <resultMap id="cellDataMap" type="com.complaint.model.TCasCell">
	       <result property="lac" column="lac" jdbcType="NUMERIC" javaType="Long" />
	       <!-- <result property="cell_name" column="cell_name" jdbcType="VARCHAR" javaType="String" />
	       <result property="psc" column="psc" jdbcType="NUMERIC" javaType="Integer" />
	       <result property="cellid" column="cid" jdbcType="NUMERIC" javaType="Long" />
	       <result property="longitude_modify" column="longitude_modify" jdbcType="NUMERIC" javaType="BigDecimal" />
	       <result property="latitude_modify" column="latitude_modify" jdbcType="NUMERIC" javaType="BigDecimal" />
	        -->
	         <result property="cellId" column="cid" jdbcType="NUMERIC" javaType="Long" />
	       <result property="celllng" column="longitude" jdbcType="NUMERIC" javaType="BigDecimal" />
	       <result property="celllat" column="latitude" jdbcType="NUMERIC" javaType="BigDecimal" />
	       <result property="bid" column="bbid" jdbcType="VARCHAR" javaType="String" />
	       <result property="ant_azimuth" column="ant_azimuth" jdbcType="NUMERIC" javaType="BigDecimal" />
	       <result property="self_azimuth" column="self_azimuth" jdbcType="NUMERIC" javaType="BigDecimal" />
	       <result property="upfreq" column="up_freq" jdbcType="NUMERIC" javaType="Integer" />
	       <result property="downfreq" column="down_freq" jdbcType="NUMERIC" javaType="Integer" />
	       <result property="indoor" column="indoor" jdbcType="NUMERIC" javaType="Integer" /> 
	       <result property="psc" column="psc" jdbcType="NUMERIC" javaType="Integer" /> 
	       <result property="baseName" column="base_name" jdbcType="VARCHAR" javaType="String" />
	        <result property="modetype" column="modetype" jdbcType="NUMERIC" javaType="Integer" />
	  </resultMap>
	  <sql id="Base_cell_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CID, LAC, CITY_NAME, ADMIN_REGION, AREA_ID, BID, BASE_NAME, CELL_NAME, LONGITUDE, 
    LATITUDE, LONGITUDE_MODIFY, LATITUDE_MODIFY, PSC, SELF_AZIMUTH, MODE_TYPE, INDOOR, 
    ANT_TYPE, ANT_AZIMUTH, ANT_HIGH, ANT_ELECT_ANGLE, ANT_MACH_ANGLE, SHARED_ANT, BASE_ADDRESS, 
    ALTITUDE, DEV_VENDOR, TOWER_MAST_TYPE, DEV_TYPE, BASE_CONF, PROGRESS, COVER_RANGE, 
    COVER_TYPE, RRU_CELL_BOOL, CELL_ID, REPEATER_CNT, SHARED_ANT_CELL, SHARED_ANT_CELL_BAK, 
    SHARED_ANT_PROP, SHARED_BASE_NAME, SHARED_BASE_PROP, NETMAN_STAT, ADMIN_REGION_TYPE, 
    UP_FREQ, DOWN_FREQ, RNC_NAME, NE_TYPE, ANT_POWER, TILT, ESC_BOOL, BASE_TYPE, RRU_CNT, 
    LOGIC_CELL_LEVEL, SECTOR_WIFI_CAPAC, E1_CNT, FE_CNT, TRANSMISSION, CQ_AREA_COVER, 
    WIFI_CAPAC, BASE_MAX_POWER, INNER_TILT, OFF_SERVICE_TIME, DOWN_MAX_POWER, SCENE_A, 
    SCENE_B, TOWN_BOOL, HSDPA_BOOL, HSDPA_STAT, HS_PDSCH_CODE, BROADCAST_CHANN_POWER, 
    HSUPA_BOOL, HSUPA_STAT, MBMS_BOOL, MBMS_STAT, MICH_CHANN_CNT, SF16_CODE_CNT, SF128_CODE_CNT, 
    E_AGCH_CHANN_CNT, E_RGCH_E_HICH_CHANN_CNT, PCPICH_CHANN_MAX_POWER, PCPICH_CHANN_MIN_POWER, 
    DOMIN_FREQ_CHANN_POWER, SYNC_CHANN_DOWN_POWER, SINGLE_CARR_FREQ_MAX_USER, CARR_FREQ_POWER, 
    UP_CE_CAPAC, DOWN_CE_CAPAC, IUB_ATM_BANDWIDTH, IUB_IP_BANDWIDTH, IU_ATM_BANDWIDTH, 
    IU_IP_BANDWIDTH, IUR_ATM_BANDWIDTH, IUR_IP_BANDWIDTH, REMARK, LAST_UPDATE_TIME, RAC, 
    SAC, RNC_ID, BASE_ID, URA_ID, TOWER_AMPLI_BOOL, SECTOR_ID, NETWORK_TIME, VIP_BASE, 
    INSIDE, BSC_NAME, PROVINCE, DEV_MODEL, CABINET_TYPE, CARRIER_TYPE, SHARED_FEEDER, 
    SHARED_PLATFORM, CELL_BAND, CELL_MARK, BSIC, TCH_FREQ, CARR_FREQ_CNT, CARR_FREQ_AVAIL_CNT, 
    CARR_FREQ_MAX_POWER, CTRL_CHANN_CNT, BUSI_CHANN_CNT, SDCCH_AVAIL_CNT, ANT_ELEV_ANGLE, 
    HOPPING_PATTERN, HALF_RATE_BOOL, GPRS_BOOL, EDGE_BOOL, ENFULL_RATE_BOOL, WCDMA_NEAR_CELL1, 
    WCDMA_NEAR_CELL2, WCDMA_NEAR_CELL3, WCDMA_NEAR_CELL4, WCDMA_NEAR_CELL5, WCDMA_NEAR_CELL6, 
    WCDMA_NEAR_CELL7, WCDMA_NEAR_CELL8, WCDMA_NEAR_CELL9, WCDMA_NEAR_CELL10, WCDMA_NEAR_CELL11, 
    WCDMA_NEAR_CELL12, WCDMA_NEAR_CELL13, WCDMA_NEAR_CELL14, WCDMA_NEAR_CELL15, WCDMA_NEAR_CELL16, 
    WCDMA_NEAR_CELL17, WCDMA_NEAR_CELL18, WCDMA_NEAR_CELL19, WCDMA_NEAR_CELL20, WCDMA_NEAR_CELL21, 
    WCDMA_NEAR_CELL22, WCDMA_NEAR_CELL23, WCDMA_NEAR_CELL24, WCDMA_NEAR_CELL25, WCDMA_NEAR_CELL26, 
    WCDMA_NEAR_CELL27, WCDMA_NEAR_CELL28, WCDMA_NEAR_CELL29, WCDMA_NEAR_CELL30, WCDMA_NEAR_CELL31, 
    WCDMA_NEAR_CELL32, WCDMA_NEAR_CELL33, WCDMA_NEAR_CELL34, WCDMA_NEAR_CELL35, WCDMA_NEAR_CELL36, 
    WCDMA_NEAR_CELL37, WCDMA_NEAR_CELL38, WCDMA_NEAR_CELL39, WCDMA_NEAR_CELL40, WCDMA_NEAR_CELL41, 
    WCDMA_NEAR_CELL42, WCDMA_NEAR_CELL43, WCDMA_NEAR_CELL44, WCDMA_NEAR_CELL45, WCDMA_NEAR_CELL46, 
    WCDMA_NEAR_CELL47, WCDMA_NEAR_CELL48, WCDMA_NEAR_CELL49, WCDMA_NEAR_CELL50, WCDMA_NEAR_CELL51, 
    WCDMA_NEAR_CELL52, WCDMA_NEAR_CELL53, WCDMA_NEAR_CELL54, WCDMA_NEAR_CELL55, WCDMA_NEAR_CELL56, 
    WCDMA_NEAR_CELL57, WCDMA_NEAR_CELL58, WCDMA_NEAR_CELL59, WCDMA_NEAR_CELL60, WCDMA_NEAR_CELL61, 
    WCDMA_NEAR_CELL62, WCDMA_NEAR_CELL63, WCDMA_NEAR_CELL64, GSM_NEAR_CELL1, GSM_NEAR_CELL2, 
    GSM_NEAR_CELL3, GSM_NEAR_CELL4, GSM_NEAR_CELL5, GSM_NEAR_CELL6, GSM_NEAR_CELL7, GSM_NEAR_CELL8, 
    GSM_NEAR_CELL9, GSM_NEAR_CELL10, GSM_NEAR_CELL11, GSM_NEAR_CELL12, GSM_NEAR_CELL13, 
    GSM_NEAR_CELL14, GSM_NEAR_CELL15, GSM_NEAR_CELL16, GSM_NEAR_CELL17, GSM_NEAR_CELL18, 
    GSM_NEAR_CELL19, GSM_NEAR_CELL20, GSM_NEAR_CELL21, GSM_NEAR_CELL22, GSM_NEAR_CELL23, 
    GSM_NEAR_CELL24, GSM_NEAR_CELL25, GSM_NEAR_CELL26, GSM_NEAR_CELL27, GSM_NEAR_CELL28, 
    GSM_NEAR_CELL29, GSM_NEAR_CELL30, GSM_NEAR_CELL31, GSM_NEAR_CELL32
  </sql>
      <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
     C.CID, C.LAC, C.CITY_NAME, C.ADMIN_REGION, C.AREA_ID, C.BID, C.BASE_NAME, C.CELL_NAME, C.LONGITUDE, C.LATITUDE,
	C.LONGITUDE_MODIFY, C.LATITUDE_MODIFY, C.PSC, C.SELF_AZIMUTH, C.MODE_TYPE, C.INDOOR, 
	C.ANT_TYPE, C.ANT_AZIMUTH, C.ANT_HIGH, C.ANT_ELECT_ANGLE, C.ANT_MACH_ANGLE, C.SHARED_ANT, C.BASE_ADDRESS, 
	C.ALTITUDE, C.DEV_VENDOR, C.TOWER_MAST_TYPE, C.DEV_TYPE, C.BASE_CONF, C.PROGRESS, C.COVER_RANGE, 
	C.COVER_TYPE, C.RRU_CELL_BOOL, C.CELL_ID, C.REPEATER_CNT, C.SHARED_ANT_CELL, C.SHARED_ANT_CELL_BAK, 
	C.SHARED_ANT_PROP, C.SHARED_BASE_NAME, C.SHARED_BASE_PROP, C.NETMAN_STAT, C.ADMIN_REGION_TYPE,
	C.UP_FREQ, C.DOWN_FREQ, C.RNC_NAME, C.NE_TYPE, C.ANT_POWER, C.TILT, C.ESC_BOOL, C.BASE_TYPE, C.RRU_CNT, 
	C.LOGIC_CELL_LEVEL, C.SECTOR_WIFI_CAPAC, C.E1_CNT, C.FE_CNT, C.TRANSMISSION, C.CQ_AREA_COVER, 
	C.WIFI_CAPAC, C.BASE_MAX_POWER, C.INNER_TILT, C.OFF_SERVICE_TIME, C.DOWN_MAX_POWER, C.SCENE_A, 
	C.SCENE_B, C.TOWN_BOOL, C.HSDPA_BOOL, C.HSDPA_STAT, C.HS_PDSCH_CODE, C.BROADCAST_CHANN_POWER, 
	C.HSUPA_BOOL, C.HSUPA_STAT, C.MBMS_BOOL, C.MBMS_STAT, C.MICH_CHANN_CNT, C.SF16_CODE_CNT, C.SF128_CODE_CNT, 
	C.E_AGCH_CHANN_CNT, C.E_RGCH_E_HICH_CHANN_CNT, C.PCPICH_CHANN_MAX_POWER, C.PCPICH_CHANN_MIN_POWER, 
	C.DOMIN_FREQ_CHANN_POWER, C.SYNC_CHANN_DOWN_POWER, C.SINGLE_CARR_FREQ_MAX_USER, C.CARR_FREQ_POWER, 
	C.UP_CE_CAPAC, C.DOWN_CE_CAPAC, C.IUB_ATM_BANDWIDTH, C.IUB_IP_BANDWIDTH, C.IU_ATM_BANDWIDTH, 
	C.IU_IP_BANDWIDTH, C.IUR_ATM_BANDWIDTH, C.IUR_IP_BANDWIDTH, C.REMARK, C.LAST_UPDATE_TIME, C.RAC, 
	C.SAC, C.RNC_ID, C.BASE_ID, C.URA_ID, C.TOWER_AMPLI_BOOL, C.SECTOR_ID, C.NETWORK_TIME, C.VIP_BASE, 
	C.INSIDE, C.BSC_NAME, C.PROVINCE, C.DEV_MODEL, C.CABINET_TYPE, C.CARRIER_TYPE, C.SHARED_FEEDER, 
	C.SHARED_PLATFORM, C.CELL_BAND, C.CELL_MARK, C.BSIC, C.TCH_FREQ, C.CARR_FREQ_CNT, C.CARR_FREQ_AVAIL_CNT,
	C.CARR_FREQ_MAX_POWER, C.CTRL_CHANN_CNT, C.BUSI_CHANN_CNT, C.SDCCH_AVAIL_CNT, C.ANT_ELEV_ANGLE, 
	C.HOPPING_PATTERN, C.HALF_RATE_BOOL, C.GPRS_BOOL, C.EDGE_BOOL, C.ENFULL_RATE_BOOL, C.WCDMA_NEAR_CELL1, 
	C.WCDMA_NEAR_CELL2, C.WCDMA_NEAR_CELL3, C.WCDMA_NEAR_CELL4, C.WCDMA_NEAR_CELL5, C.WCDMA_NEAR_CELL6, 
	C.WCDMA_NEAR_CELL7, C.WCDMA_NEAR_CELL8, C.WCDMA_NEAR_CELL9, C.WCDMA_NEAR_CELL10, C.WCDMA_NEAR_CELL11, 
	C.WCDMA_NEAR_CELL12, C.WCDMA_NEAR_CELL13, C.WCDMA_NEAR_CELL14, C.WCDMA_NEAR_CELL15, C.WCDMA_NEAR_CELL16,
	C.WCDMA_NEAR_CELL17, C.WCDMA_NEAR_CELL18, C.WCDMA_NEAR_CELL19, C.WCDMA_NEAR_CELL20, C.WCDMA_NEAR_CELL21, 
	C.WCDMA_NEAR_CELL22, C.WCDMA_NEAR_CELL23, C.WCDMA_NEAR_CELL24, C.WCDMA_NEAR_CELL25, C.WCDMA_NEAR_CELL26, 
	C.WCDMA_NEAR_CELL27, C.WCDMA_NEAR_CELL28, C.WCDMA_NEAR_CELL29, C.WCDMA_NEAR_CELL30, C.WCDMA_NEAR_CELL31, 
	C.WCDMA_NEAR_CELL32, C.WCDMA_NEAR_CELL33, C.WCDMA_NEAR_CELL34, C.WCDMA_NEAR_CELL35, C.WCDMA_NEAR_CELL36, 
	C.WCDMA_NEAR_CELL37, C.WCDMA_NEAR_CELL38, C.WCDMA_NEAR_CELL39, C.WCDMA_NEAR_CELL40, C.WCDMA_NEAR_CELL41,
	C.WCDMA_NEAR_CELL42, C.WCDMA_NEAR_CELL43, C.WCDMA_NEAR_CELL44, C.WCDMA_NEAR_CELL45, C.WCDMA_NEAR_CELL46, 
	C.WCDMA_NEAR_CELL47, C.WCDMA_NEAR_CELL48, C.WCDMA_NEAR_CELL49, C.WCDMA_NEAR_CELL50, C.WCDMA_NEAR_CELL51, 
	C.WCDMA_NEAR_CELL52, C.WCDMA_NEAR_CELL53, C.WCDMA_NEAR_CELL54, C.WCDMA_NEAR_CELL55, C.WCDMA_NEAR_CELL56,
	C.WCDMA_NEAR_CELL57, C.WCDMA_NEAR_CELL58, C.WCDMA_NEAR_CELL59, C.WCDMA_NEAR_CELL60, C.WCDMA_NEAR_CELL61, 
	C.WCDMA_NEAR_CELL62, C.WCDMA_NEAR_CELL63, C.WCDMA_NEAR_CELL64, C.GSM_NEAR_CELL1, C.GSM_NEAR_CELL2, 
	C.GSM_NEAR_CELL3, C.GSM_NEAR_CELL4, C.GSM_NEAR_CELL5, C.GSM_NEAR_CELL6, C.GSM_NEAR_CELL7, C.GSM_NEAR_CELL8, 
	C.GSM_NEAR_CELL9, C.GSM_NEAR_CELL10, C.GSM_NEAR_CELL11, C.GSM_NEAR_CELL12, C.GSM_NEAR_CELL13,
	C.GSM_NEAR_CELL14, C.GSM_NEAR_CELL15, C.GSM_NEAR_CELL16, C.GSM_NEAR_CELL17, C.GSM_NEAR_CELL18, 
	C.GSM_NEAR_CELL19, C.GSM_NEAR_CELL20, C.GSM_NEAR_CELL21, C.GSM_NEAR_CELL22, C.GSM_NEAR_CELL23,
	C.GSM_NEAR_CELL24, C.GSM_NEAR_CELL25, C.GSM_NEAR_CELL26, C.GSM_NEAR_CELL27, C.GSM_NEAR_CELL28, 
	C.GSM_NEAR_CELL29, C.GSM_NEAR_CELL30, C.GSM_NEAR_CELL31, C.GSM_NEAR_CELL32
  </sql>
	<select id="queryBaseStationData" parameterType="map" resultMap="baseStationDataMap">
		select a.bid,
	       a.base_name,
	       b.lac,
	       b.cid,
	       b.cell_name,
	       b.psc,
	       b.mode_type modetype,
	       b.LONGITUDE_MODIFY longitude,
	       b.LATITUDE_MODIFY latitude,
	       b.bid as bbid,
	       b.indoor,
		   b.self_azimuth,
		   b.ant_azimuth,
	       b.up_freq,
	       b.down_freq
	  from t_cas_base a, t_cas_cell b
	 where a.bid = b.bid
	 <!-- 室内外 -->
	 <if test="indoor!=null and indoor!=''">
	 and instr(','||#{indoor}||',',','||b.indoor||',')>0 
	 </if>
	 <!-- 网络状态-->
	 <if test="modetypes!=null and modetypes!=''">
	 and instr(','||#{modetypes}||',',','||b.mode_type||',')>0 
	 and  0 &lt; (case when b.mode_type=1 then instr(','||#{cellBands}||',',','||b.cell_band||',') when b.mode_type=0 then 1 else 0 end  )
	 </if>
	  <!-- 频段
	 <if test="cellBands!=null and cellBands!=''">
	 case when instr(','||#{modetypes}||',',',2,') > 0 then 
	 and instr(','||#{cellBands}||',',','||b.cell_band||',')>0 
	 </if>-->
	 <!-- 区域 -->
	 <if test="areaids!=null and areaids!=''">
	 and instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(b.area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
	 </if>
	 and b.LONGITUDE_MODIFY > 0
	 and b.LATITUDE_MODIFY > 0
	 order by  b.cell_name
	</select>
	
	<!-- 查询中心经纬度 -->
	<select id="queryCenter" resultType="com.complaint.model.CenterZoom" parameterType="map">
	 select 
	 max(b.latitude_modify) max_lat,min(b.latitude_modify) min_lat,max(b.longitude_modify) max_lng,
	 min(b.longitude_modify) min_lng from
	 t_cas_base a, t_cas_cell b
	 where a.bid = b.bid
	 and b.area_id = #{areaid}
	</select>
	
	<select id="queryBaseStationById" parameterType="java.lang.Integer" resultMap="baseStationDataMap">
		select a.bid,
	       a.base_name,
	       b.lac,
	       b.cid,
	       b.cell_name,
	       b.psc,
	       b.mode_type modetype,
	       b.LONGITUDE_MODIFY longitude,
	       b.LATITUDE_MODIFY latitude,
	       b.bid as bbid,
	       b.indoor,
		   b.self_azimuth self_azimuth,
		   b.ant_azimuth  ant_azimuth,
	       b.up_freq,
	       b.down_freq
	  from t_cas_base a, t_cas_cell b
	 where a.bid = b.bid
	 and b.bid = #{bid}
	 and b.LONGITUDE_MODIFY > 0
	 and b.LATITUDE_MODIFY > 0
	 order by  b.cell_name
	</select>
	
	<select id="queryCell"  parameterType="map" resultType="com.complaint.model.TCasCell">
		select c.lac lac,
				c.cid cellId,
				c.up_freq  upfreq,
				c.down_freq downfreq,
				c.mode_type modetype,
				c.bid,
				c.mode_type modetype,
				c.base_name baseName,
				c.LONGITUDE_MODIFY celllng,
	            c.LATITUDE_MODIFY celllat,
	       		c.self_azimuth self_azimuth,
		  	    c.ant_azimuth  ant_azimuth,
	       		c.indoor,
		        c.psc,
	      	    c.cell_band cellBand
		from t_cas_cell c 
			 where c.lac=#{lac}
			   and c.cid=#{cid}
			   and c.LONGITUDE_MODIFY > 0
			   and c.LATITUDE_MODIFY > 0
	</select>
	<select id="queryNearCell"  parameterType="map" resultType="com.complaint.model.TCasCell">
		select  c.lac lac,
				c.cid cellId,
				c.up_freq  upfreq,
				c.down_freq downfreq,
				c.mode_type modetype,
				c.bid,
				c.mode_type modetype,
				c.base_name baseName,
				c.LONGITUDE_MODIFY celllng,
	            c.LATITUDE_MODIFY celllat,
                c.self_azimuth self_azimuth,
                c.ant_azimuth  ant_azimuth,
                c.indoor,
                c.psc,
                c.cell_band cellBand
     from t_cas_cell c where instr
    ((select   
          case when c.gsm_near_cell1 is not null then ','||c.gsm_near_cell1||',' else ',' end || 
          case when c.gsm_near_cell2 is not null then c.gsm_near_cell2||',' end ||
          case when c.gsm_near_cell3 is not null then c.gsm_near_cell3||',' end ||
          case when c.gsm_near_cell4 is not null then c.gsm_near_cell4||',' end ||
          case when c.gsm_near_cell5 is not null then c.gsm_near_cell5||',' end ||
          case when c.gsm_near_cell6 is not null then c.gsm_near_cell6||',' end || 
          case when c.gsm_near_cell7 is not null then c.gsm_near_cell7||',' end ||
          case when c.gsm_near_cell8 is not null then c.gsm_near_cell8||',' end ||
          case when c.gsm_near_cell9 is not null then c.gsm_near_cell9||',' end ||
          case when c.gsm_near_cell10 is not null then c.gsm_near_cell10||',' end ||
          case when c.gsm_near_cell11 is not null then c.gsm_near_cell11||',' end || 
          case when c.gsm_near_cell12 is not null then c.gsm_near_cell12||',' end ||
          case when c.gsm_near_cell13 is not null then c.gsm_near_cell13||',' end ||
          case when c.gsm_near_cell14 is not null then c.gsm_near_cell14||',' end ||
          case when c.gsm_near_cell15 is not null then c.gsm_near_cell15||',' end ||
          case when c.gsm_near_cell16 is not null then c.gsm_near_cell16||',' end || 
          case when c.gsm_near_cell17 is not null then c.gsm_near_cell17||',' end ||
          case when c.gsm_near_cell18 is not null then c.gsm_near_cell18||',' end ||
          case when c.gsm_near_cell19 is not null then c.gsm_near_cell19||',' end ||
          case when c.gsm_near_cell20 is not null then c.gsm_near_cell20||',' end ||
          case when c.gsm_near_cell21 is not null then c.gsm_near_cell21||',' end || 
          case when c.gsm_near_cell22 is not null then c.gsm_near_cell22||',' end ||
          case when c.gsm_near_cell23 is not null then c.gsm_near_cell23||',' end ||
          case when c.gsm_near_cell24 is not null then c.gsm_near_cell24||',' end ||
          case when c.gsm_near_cell25 is not null then c.gsm_near_cell25||',' end ||
          case when c.gsm_near_cell26 is not null then c.gsm_near_cell26||',' end || 
          case when c.gsm_near_cell27 is not null then c.gsm_near_cell27||',' end ||
          case when c.gsm_near_cell28 is not null then c.gsm_near_cell28||',' end ||
          case when c.gsm_near_cell29 is not null then c.gsm_near_cell29||',' end ||
          case when c.gsm_near_cell30 is not null then c.gsm_near_cell30||',' end ||
          case when c.gsm_near_cell31 is not null then c.gsm_near_cell31||',' end ||
          case when c.gsm_near_cell32 is not null then c.gsm_near_cell32||',' end ||
          case when c.wcdma_near_cell1 is not null then c.wcdma_near_cell1||',' end ||
          case when c.wcdma_near_cell2 is not null then c.wcdma_near_cell2||',' end ||
          case when c.wcdma_near_cell3 is not null then c.wcdma_near_cell3||',' end ||
          case when c.wcdma_near_cell4 is not null then c.wcdma_near_cell4||',' end ||
          case when c.wcdma_near_cell5 is not null then c.wcdma_near_cell5||',' end ||
          case when c.wcdma_near_cell6 is not null then c.wcdma_near_cell6||',' end ||
          case when c.wcdma_near_cell7 is not null then c.wcdma_near_cell7||',' end ||
          case when c.wcdma_near_cell8 is not null then c.wcdma_near_cell8||',' end ||
          case when c.wcdma_near_cell9 is not null then c.wcdma_near_cell9||',' end ||
          case when c.wcdma_near_cell10 is not null then c.wcdma_near_cell10||',' end ||
          case when c.wcdma_near_cell11 is not null then c.wcdma_near_cell11||',' end ||
          case when c.wcdma_near_cell12 is not null then c.wcdma_near_cell12||',' end ||
          case when c.wcdma_near_cell13 is not null then c.wcdma_near_cell13||',' end ||
          case when c.wcdma_near_cell14 is not null then c.wcdma_near_cell14||',' end ||
          case when c.wcdma_near_cell15 is not null then c.wcdma_near_cell15||',' end ||
          case when c.wcdma_near_cell16 is not null then c.wcdma_near_cell16||',' end ||
          case when c.wcdma_near_cell17 is not null then c.wcdma_near_cell17||',' end ||
          case when c.wcdma_near_cell18 is not null then c.wcdma_near_cell18||',' end ||
          case when c.wcdma_near_cell19 is not null then c.wcdma_near_cell19||',' end ||
          case when c.wcdma_near_cell20 is not null then c.wcdma_near_cell20||',' end ||
          case when c.wcdma_near_cell21 is not null then c.wcdma_near_cell21||',' end ||
          case when c.wcdma_near_cell22 is not null then c.wcdma_near_cell22||',' end ||
          case when c.wcdma_near_cell23 is not null then c.wcdma_near_cell23||',' end ||
          case when c.wcdma_near_cell24 is not null then c.wcdma_near_cell24||',' end ||
          case when c.wcdma_near_cell25 is not null then c.wcdma_near_cell25||',' end ||
          case when c.wcdma_near_cell26 is not null then c.wcdma_near_cell26||',' end ||
          case when c.wcdma_near_cell27 is not null then c.wcdma_near_cell27||',' end ||
          case when c.wcdma_near_cell28 is not null then c.wcdma_near_cell28||',' end ||
          case when c.wcdma_near_cell29 is not null then c.wcdma_near_cell29||',' end ||
          case when c.wcdma_near_cell30 is not null then c.wcdma_near_cell30||',' end ||
          case when c.wcdma_near_cell31 is not null then c.wcdma_near_cell31||',' end ||
          case when c.wcdma_near_cell32 is not null then c.wcdma_near_cell32||',' end ||
          case when c.wcdma_near_cell33 is not null then c.wcdma_near_cell33||',' end ||
          case when c.wcdma_near_cell34 is not null then c.wcdma_near_cell34||',' end ||
          case when c.wcdma_near_cell35 is not null then c.wcdma_near_cell35||',' end ||
          case when c.wcdma_near_cell36 is not null then c.wcdma_near_cell36||',' end ||
          case when c.wcdma_near_cell37 is not null then c.wcdma_near_cell37||',' end ||
          case when c.wcdma_near_cell38 is not null then c.wcdma_near_cell38||',' end ||
          case when c.wcdma_near_cell39 is not null then c.wcdma_near_cell39||',' end || 
          case when c.wcdma_near_cell40 is not null then c.wcdma_near_cell40||',' end ||
          case when c.wcdma_near_cell41 is not null then c.wcdma_near_cell41||',' end ||
          case when c.wcdma_near_cell42 is not null then c.wcdma_near_cell42||',' end ||
          case when c.wcdma_near_cell43 is not null then c.wcdma_near_cell43||',' end ||
          case when c.wcdma_near_cell44 is not null then c.wcdma_near_cell44||',' end ||
          case when c.wcdma_near_cell45 is not null then c.wcdma_near_cell45||',' end ||
          case when c.wcdma_near_cell46 is not null then c.wcdma_near_cell46||',' end ||
          case when c.wcdma_near_cell47 is not null then c.wcdma_near_cell47||',' end ||
          case when c.wcdma_near_cell48 is not null then c.wcdma_near_cell48||',' end ||
          case when c.wcdma_near_cell49 is not null then c.wcdma_near_cell49||',' end ||
          case when c.wcdma_near_cell50 is not null then c.wcdma_near_cell50||',' end ||
          case when c.wcdma_near_cell51 is not null then c.wcdma_near_cell51||',' end ||
          case when c.wcdma_near_cell52 is not null then c.wcdma_near_cell52||',' end ||
          case when c.wcdma_near_cell53 is not null then c.wcdma_near_cell53||',' end ||
          case when c.wcdma_near_cell54 is not null then c.wcdma_near_cell54||',' end ||
          case when c.wcdma_near_cell55 is not null then c.wcdma_near_cell55||',' end ||
          case when c.wcdma_near_cell56 is not null then c.wcdma_near_cell56||',' end ||
          case when c.wcdma_near_cell57 is not null then c.wcdma_near_cell57||',' end ||
          case when c.wcdma_near_cell58 is not null then c.wcdma_near_cell58||',' end ||
          case when c.wcdma_near_cell59 is not null then c.wcdma_near_cell59||',' end ||
          case when c.wcdma_near_cell60 is not null then c.wcdma_near_cell60||',' end ||
          case when c.wcdma_near_cell61 is not null then c.wcdma_near_cell61||',' end ||
          case when c.wcdma_near_cell62 is not null then c.wcdma_near_cell62||',' end ||
          case when c.wcdma_near_cell63 is not null then c.wcdma_near_cell63||',' end ||
          case when c.wcdma_near_cell64 is not null then c.wcdma_near_cell64||',' end as near
      from t_cas_cell c
     where c.lac =  #{lac}
       and c.cid = #{cid}), ','||c.lac||'_'||c.cid||',') > 0
        <!-- 区域 -->
	  and instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(c.area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
		  <!-- 室内外 -->
		  <if test="indoor!=null and indoor!=''">
		   and instr(','||#{indoor}||',',','||c.indoor||',')>0 
		  </if>
		  <!-- 网络状态-->
		  <if test="modetypes!=null and modetypes!=''">
		  and instr(','||#{modetypes}||',',','||c.mode_type||',')>0 
		  and  0 &lt; (case when c.mode_type=1 then instr(','||#{cellBands}||',',','||c.cell_band||',') when c.mode_type=0 then 1 else 0 end  )
		  </if>
       and c.LONGITUDE_MODIFY > 0
	   and c.LATITUDE_MODIFY > 0
       order by  c.cell_name
	</select>
	<select id="queryNearCellOther"  parameterType="map" resultType="com.complaint.model.TCasCell" >
		select c.lac lac,
				c.cid cellId,
				c.up_freq  upfreq,
				c.down_freq downfreq,
				c.mode_type modetype,
				c.bid,
				c.mode_type modetype,
				c.base_name baseName,
			    c.LONGITUDE_MODIFY celllng,
	            c.LATITUDE_MODIFY celllat,
	       		c.self_azimuth self_azimuth,
		  	    c.ant_azimuth  ant_azimuth,
	       		c.indoor,
	       		c.psc,
	       		c.cell_band cellBand
	     from t_cas_cell c
	    where (c.gsm_near_cell1 = #{lac_cid}
	       or c.gsm_near_cell2 = #{lac_cid}
	       or c.gsm_near_cell3 = #{lac_cid}
	       or c.gsm_near_cell4 = #{lac_cid}
	       or c.gsm_near_cell5 = #{lac_cid}
	       or c.gsm_near_cell6 = #{lac_cid}
	       or c.gsm_near_cell7 = #{lac_cid}
	       or c.gsm_near_cell8 = #{lac_cid}
	       or c.gsm_near_cell9 = #{lac_cid}
	       or c.gsm_near_cell10 = #{lac_cid}
	       or c.gsm_near_cell11 = #{lac_cid}
	       or c.gsm_near_cell12 = #{lac_cid}
	       or c.gsm_near_cell13 = #{lac_cid}
	       or c.gsm_near_cell14 = #{lac_cid}
	       or c.gsm_near_cell15 = #{lac_cid}
	       or c.gsm_near_cell16 = #{lac_cid}
	       or c.gsm_near_cell17 = #{lac_cid}
	       or c.gsm_near_cell18 = #{lac_cid}
	       or c.gsm_near_cell19 = #{lac_cid}
	       or c.gsm_near_cell20 = #{lac_cid}
	       or c.gsm_near_cell21 = #{lac_cid}
	       or c.gsm_near_cell22 = #{lac_cid}
	       or c.gsm_near_cell23 = #{lac_cid}
	       or c.gsm_near_cell24 = #{lac_cid}
	       or c.gsm_near_cell25 = #{lac_cid}
	       or c.gsm_near_cell26 = #{lac_cid}
	       or c.gsm_near_cell27 = #{lac_cid}
	       or c.gsm_near_cell28 = #{lac_cid}
	       or c.gsm_near_cell29 = #{lac_cid}
	       or c.gsm_near_cell30 = #{lac_cid}
	       or c.gsm_near_cell31 = #{lac_cid}
	       or c.gsm_near_cell32 = #{lac_cid}
	       or c.wcdma_near_cell1 = #{lac_cid}
	       or c.wcdma_near_cell2 = #{lac_cid}
	       or c.wcdma_near_cell3 = #{lac_cid}
	       or c.wcdma_near_cell4 = #{lac_cid}
	       or c.wcdma_near_cell5 = #{lac_cid}
	       or c.wcdma_near_cell6 = #{lac_cid}
	       or c.wcdma_near_cell7 = #{lac_cid}
	       or c.wcdma_near_cell8 = #{lac_cid}
	       or c.wcdma_near_cell9 = #{lac_cid}
	       or c.wcdma_near_cell10 = #{lac_cid}
	       or c.wcdma_near_cell11 = #{lac_cid}
	       or c.wcdma_near_cell12 = #{lac_cid}
	       or c.wcdma_near_cell13 = #{lac_cid}
	       or c.wcdma_near_cell14 = #{lac_cid}
	       or c.wcdma_near_cell15 = #{lac_cid}
	       or c.wcdma_near_cell16 = #{lac_cid}
	       or c.wcdma_near_cell17 = #{lac_cid}
	       or c.wcdma_near_cell18 = #{lac_cid}
	       or c.wcdma_near_cell19 = #{lac_cid}
	       or c.wcdma_near_cell20 = #{lac_cid}
	       or c.wcdma_near_cell21 = #{lac_cid}
	       or c.wcdma_near_cell22 = #{lac_cid}
	       or c.wcdma_near_cell23 = #{lac_cid}
	       or c.wcdma_near_cell24 = #{lac_cid}
	       or c.wcdma_near_cell25 = #{lac_cid}
	       or c.wcdma_near_cell26 = #{lac_cid}
	       or c.wcdma_near_cell27 = #{lac_cid}
	       or c.wcdma_near_cell28 = #{lac_cid}
	       or c.wcdma_near_cell29 = #{lac_cid}
	       or c.wcdma_near_cell30 = #{lac_cid}
	       or c.wcdma_near_cell31 = #{lac_cid}
	       or c.wcdma_near_cell32 = #{lac_cid}
	       or c.wcdma_near_cell33 = #{lac_cid}
	       or c.wcdma_near_cell34 = #{lac_cid}
	       or c.wcdma_near_cell35 = #{lac_cid}
	       or c.wcdma_near_cell36 = #{lac_cid}
	       or c.wcdma_near_cell37 = #{lac_cid}
	       or c.wcdma_near_cell38 = #{lac_cid}
	       or c.wcdma_near_cell39 = #{lac_cid}
	       or c.wcdma_near_cell40 = #{lac_cid}
	       or c.wcdma_near_cell41 = #{lac_cid}
	       or c.wcdma_near_cell42 = #{lac_cid}
	       or c.wcdma_near_cell43 = #{lac_cid}
	       or c.wcdma_near_cell44 = #{lac_cid}
	       or c.wcdma_near_cell45 = #{lac_cid}
	       or c.wcdma_near_cell46 = #{lac_cid}
	       or c.wcdma_near_cell47 = #{lac_cid}
	       or c.wcdma_near_cell48 = #{lac_cid}
	       or c.wcdma_near_cell49 = #{lac_cid}
	       or c.wcdma_near_cell50 = #{lac_cid}
	       or c.wcdma_near_cell51 = #{lac_cid}
	       or c.wcdma_near_cell52 = #{lac_cid}
	       or c.wcdma_near_cell53 = #{lac_cid}
	       or c.wcdma_near_cell54 = #{lac_cid}
	       or c.wcdma_near_cell55 = #{lac_cid}
	       or c.wcdma_near_cell56 = #{lac_cid}
	       or c.wcdma_near_cell57 = #{lac_cid}
	       or c.wcdma_near_cell58 = #{lac_cid}
	       or c.wcdma_near_cell59 = #{lac_cid}
	       or c.wcdma_near_cell60 = #{lac_cid}
	       or c.wcdma_near_cell61 = #{lac_cid}
	       or c.wcdma_near_cell62 = #{lac_cid}
	       or c.wcdma_near_cell63 = #{lac_cid}
	       or c.wcdma_near_cell64 = #{lac_cid})
	       <!-- 区域 -->
		  and instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(c.area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
		  <!-- 室内外 -->
		  <if test="indoor!=null and indoor!=''">
		   and instr(','||#{indoor}||',',','||c.indoor||',')>0 
		  </if>
		  <!-- 网络状态-->
		  <if test="modetypes!=null and modetypes!=''">
		  and instr(','||#{modetypes}||',',','||c.mode_type||',')>0 
		  and  0 &lt; (case when c.mode_type=1 then instr(','||#{cellBands}||',',','||c.cell_band||',') when c.mode_type=0 then 1 else 0 end  )
		  </if>
	       and c.LONGITUDE_MODIFY > 0
		   and c.LATITUDE_MODIFY > 0
	       order by  c.cell_name
	</select>
	
	
	<select id="queryCellById" parameterType="map" resultType="com.complaint.model.TCasCell">
	 select  c.cid cellId, c.lac, c.LONGITUDE_MODIFY celllng,c.cover_range coverRange,c.bsc_name bscName,c.cell_band cellBand,
	            c.LATITUDE_MODIFY celllat,c.psc,c.mode_type modetype,c.bsic,c.shared_platform sharedPlatform,c.dev_type devType,
	 c.self_azimuth self_azimuth,
	 c.ant_azimuth  ant_azimuth,c.ADMIN_REGION adminRegion,c.rnc_name rncName,b.base_name baseName,
	 c.cell_name cellname,c.indoor,c.ne_type neType,c.ANT_ELECT_ANGLE antElectAngle,c.ANT_MACH_ANGLE antMathAngle,
	 c.tilt ,c.ant_type antType,c.shared_ant sharedAnt,
	 c.down_freq downfreq,
	 c.up_freq upfreq
	  from t_cas_cell c,t_cas_base b
	  where c.bid=b.bid 
	  and c.lac=#{lac} 
	  and c.cid=#{cid}
	  and c.LONGITUDE_MODIFY > 0
      and c.LATITUDE_MODIFY > 0
	</select>
	
	<select id="queryCellByIdOriginal" parameterType="map" resultType="com.complaint.model.TCasCell">
	 select  c.cid cellId, c.lac, c.LONGITUDE celllng,c.cover_range coverRange,c.bsc_name bscName,c.cell_band cellBand,
	            c.LATITUDE celllat,c.psc,c.mode_type modetype,c.bsic,c.shared_platform sharedPlatform,c.dev_type devType,
	 c.self_azimuth self_azimuth,
	 c.ant_azimuth  ant_azimuth,c.ADMIN_REGION adminRegion,c.rnc_name rncName,b.base_name baseName,
	 c.cell_name cellname,c.indoor,c.ne_type neType,c.ANT_ELECT_ANGLE antElectAngle,c.ANT_MACH_ANGLE antMathAngle,
	 c.tilt ,c.ant_type antType,c.shared_ant sharedAnt,
	 c.down_freq downfreq,
	 c.up_freq upfreq
	  from t_cas_cell c,t_cas_base b
	  where c.bid=b.bid 
	  and c.lac=#{lac} 
	  and c.cid=#{cid}
	  and c.LONGITUDE_MODIFY > 0
      and c.LATITUDE_MODIFY > 0
	</select>
	
	<select id="queryAreaPosition" parameterType="map" resultType="map">
	 select areaid as "areaid", longitude as "longitude", latitude as "latitude" from t_area_position 
	 <if test="size != 0">  
        where areaid IN  
         <foreach item="item" collection="areasList" open="(" separator="," close=")">  
           #{item.areaid}  
         </foreach>   
      </if>  
	</select>
	<select id="queryCellInfos"  resultType="com.complaint.model.TCasCell">
	 select  c.cid cellId, c.lac, c.LONGITUDE_MODIFY celllng,c.cover_range coverRange,c.bsc_name bscName,c.cell_band cellBand,
	            c.LATITUDE_MODIFY celllat,c.psc,c.mode_type modetype,c.bsic,c.shared_platform sharedPlatform,c.dev_type devType,
	 c.self_azimuth self_azimuth,
	 c.ant_azimuth  ant_azimuth,c.ADMIN_REGION adminRegion,c.rnc_name rncName,b.base_name baseName,
	 c.cell_name cellname,c.indoor,c.ne_type neType,c.ANT_ELECT_ANGLE antElectAngle,c.ANT_MACH_ANGLE antMathAngle,
	 c.tilt ,c.ant_type antType,c.shared_ant sharedAnt
	  from t_cas_cell c,t_cas_base b
	  where c.bid=b.bid 
	</select>
	<select id="queryRegiondown"  resultMap="BaseResultMap" parameterType="map">
	 select 
	 	<include refid="Base_cell_List" />
	 	from (
	 	select <include refid="Base_cell_List" />,rownum rn from
	 	(select <include refid="Base_cell_List" />
		  from t_cas_cell where
		  <!-- 区域 -->
		  instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
		  <!-- 室内外 -->
		  <if test="indoor!=null and indoor!=''">
		   and instr(','||#{indoor}||',',','||indoor||',')>0 
		  </if>
		  <!-- 网络状态-->
		  <if test="modetypes!=null and modetypes!=''">
		  and instr(','||#{modetypes}||',',','||mode_type||',')>0 
		  and  0 &lt; (case when mode_type=1 then instr(','||#{cellBands}||',',','||cell_band||',') when mode_type=0 then 1 else 0 end  )
		  </if>
		  <!-- 频段
		  <if test="cellBands!=null and cellBands!=''">
		  case when instr(','||#{modetypes}||',',',2,') > 0 then 
		  and instr(','||#{cellBands}||',',','||cell_band||',')>0 
		  </if>-->
		  <!-- 框选导出 -->
		  <if test="minlat!=null and minlat!=''">
		  and LATITUDE_MODIFY &gt;= #{minlat} 
		  </if>
		  <if test="maxlat!=null and maxlat!=''">
		  and LATITUDE_MODIFY &lt;= #{maxlat} 
		  </if>
		  <if test="minlng!=null and minlng!=''">
		  and LONGITUDE_MODIFY &gt;= #{minlng} 
		  </if>
		  <if test="maxlng!=null and maxlng!=''">
		  and LONGITUDE_MODIFY &lt;= #{maxlng} 
		  </if>
		   order by area_id
		 )) where rn &lt;= #{mbound} and rn &gt; #{lbound}
	</select>
	<update id="setAreaCenter" parameterType="map">
		update t_area_position set longitude=#{longitude},latitude=#{latitude} where areaid=#{areaid}
	</update>
	<select id="newSearcher"  resultMap="BaseResultMap" parameterType="map">
	 select
		 <include refid="Base_Column_List" />
		  from t_cas_cell
	</select>
	<select id="queryReportNearCell"  parameterType="map" resultMap="BaseResultMap">
		select  <include refid="Base_Column_List" />
     from t_cas_cell c where instr
    ((select   
          case when c.gsm_near_cell1 is not null then ','||c.gsm_near_cell1||',' else ',' end || 
          case when c.gsm_near_cell2 is not null then c.gsm_near_cell2||',' end ||
          case when c.gsm_near_cell3 is not null then c.gsm_near_cell3||',' end ||
          case when c.gsm_near_cell4 is not null then c.gsm_near_cell4||',' end ||
          case when c.gsm_near_cell5 is not null then c.gsm_near_cell5||',' end ||
          case when c.gsm_near_cell6 is not null then c.gsm_near_cell6||',' end || 
          case when c.gsm_near_cell7 is not null then c.gsm_near_cell7||',' end ||
          case when c.gsm_near_cell8 is not null then c.gsm_near_cell8||',' end ||
          case when c.gsm_near_cell9 is not null then c.gsm_near_cell9||',' end ||
          case when c.gsm_near_cell10 is not null then c.gsm_near_cell10||',' end ||
          case when c.gsm_near_cell11 is not null then c.gsm_near_cell11||',' end || 
          case when c.gsm_near_cell12 is not null then c.gsm_near_cell12||',' end ||
          case when c.gsm_near_cell13 is not null then c.gsm_near_cell13||',' end ||
          case when c.gsm_near_cell14 is not null then c.gsm_near_cell14||',' end ||
          case when c.gsm_near_cell15 is not null then c.gsm_near_cell15||',' end ||
          case when c.gsm_near_cell16 is not null then c.gsm_near_cell16||',' end || 
          case when c.gsm_near_cell17 is not null then c.gsm_near_cell17||',' end ||
          case when c.gsm_near_cell18 is not null then c.gsm_near_cell18||',' end ||
          case when c.gsm_near_cell19 is not null then c.gsm_near_cell19||',' end ||
          case when c.gsm_near_cell20 is not null then c.gsm_near_cell20||',' end ||
          case when c.gsm_near_cell21 is not null then c.gsm_near_cell21||',' end || 
          case when c.gsm_near_cell22 is not null then c.gsm_near_cell22||',' end ||
          case when c.gsm_near_cell23 is not null then c.gsm_near_cell23||',' end ||
          case when c.gsm_near_cell24 is not null then c.gsm_near_cell24||',' end ||
          case when c.gsm_near_cell25 is not null then c.gsm_near_cell25||',' end ||
          case when c.gsm_near_cell26 is not null then c.gsm_near_cell26||',' end || 
          case when c.gsm_near_cell27 is not null then c.gsm_near_cell27||',' end ||
          case when c.gsm_near_cell28 is not null then c.gsm_near_cell28||',' end ||
          case when c.gsm_near_cell29 is not null then c.gsm_near_cell29||',' end ||
          case when c.gsm_near_cell30 is not null then c.gsm_near_cell30||',' end ||
          case when c.gsm_near_cell31 is not null then c.gsm_near_cell31||',' end ||
          case when c.gsm_near_cell32 is not null then c.gsm_near_cell32||',' end ||
          case when c.wcdma_near_cell1 is not null then c.wcdma_near_cell1||',' end ||
          case when c.wcdma_near_cell2 is not null then c.wcdma_near_cell2||',' end ||
          case when c.wcdma_near_cell3 is not null then c.wcdma_near_cell3||',' end ||
          case when c.wcdma_near_cell4 is not null then c.wcdma_near_cell4||',' end ||
          case when c.wcdma_near_cell5 is not null then c.wcdma_near_cell5||',' end ||
          case when c.wcdma_near_cell6 is not null then c.wcdma_near_cell6||',' end ||
          case when c.wcdma_near_cell7 is not null then c.wcdma_near_cell7||',' end ||
          case when c.wcdma_near_cell8 is not null then c.wcdma_near_cell8||',' end ||
          case when c.wcdma_near_cell9 is not null then c.wcdma_near_cell9||',' end ||
          case when c.wcdma_near_cell10 is not null then c.wcdma_near_cell10||',' end ||
          case when c.wcdma_near_cell11 is not null then c.wcdma_near_cell11||',' end ||
          case when c.wcdma_near_cell12 is not null then c.wcdma_near_cell12||',' end ||
          case when c.wcdma_near_cell13 is not null then c.wcdma_near_cell13||',' end ||
          case when c.wcdma_near_cell14 is not null then c.wcdma_near_cell14||',' end ||
          case when c.wcdma_near_cell15 is not null then c.wcdma_near_cell15||',' end ||
          case when c.wcdma_near_cell16 is not null then c.wcdma_near_cell16||',' end ||
          case when c.wcdma_near_cell17 is not null then c.wcdma_near_cell17||',' end ||
          case when c.wcdma_near_cell18 is not null then c.wcdma_near_cell18||',' end ||
          case when c.wcdma_near_cell19 is not null then c.wcdma_near_cell19||',' end ||
          case when c.wcdma_near_cell20 is not null then c.wcdma_near_cell20||',' end ||
          case when c.wcdma_near_cell21 is not null then c.wcdma_near_cell21||',' end ||
          case when c.wcdma_near_cell22 is not null then c.wcdma_near_cell22||',' end ||
          case when c.wcdma_near_cell23 is not null then c.wcdma_near_cell23||',' end ||
          case when c.wcdma_near_cell24 is not null then c.wcdma_near_cell24||',' end ||
          case when c.wcdma_near_cell25 is not null then c.wcdma_near_cell25||',' end ||
          case when c.wcdma_near_cell26 is not null then c.wcdma_near_cell26||',' end ||
          case when c.wcdma_near_cell27 is not null then c.wcdma_near_cell27||',' end ||
          case when c.wcdma_near_cell28 is not null then c.wcdma_near_cell28||',' end ||
          case when c.wcdma_near_cell29 is not null then c.wcdma_near_cell29||',' end ||
          case when c.wcdma_near_cell30 is not null then c.wcdma_near_cell30||',' end ||
          case when c.wcdma_near_cell31 is not null then c.wcdma_near_cell31||',' end ||
          case when c.wcdma_near_cell32 is not null then c.wcdma_near_cell32||',' end ||
          case when c.wcdma_near_cell33 is not null then c.wcdma_near_cell33||',' end ||
          case when c.wcdma_near_cell34 is not null then c.wcdma_near_cell34||',' end ||
          case when c.wcdma_near_cell35 is not null then c.wcdma_near_cell35||',' end ||
          case when c.wcdma_near_cell36 is not null then c.wcdma_near_cell36||',' end ||
          case when c.wcdma_near_cell37 is not null then c.wcdma_near_cell37||',' end ||
          case when c.wcdma_near_cell38 is not null then c.wcdma_near_cell38||',' end ||
          case when c.wcdma_near_cell39 is not null then c.wcdma_near_cell39||',' end || 
          case when c.wcdma_near_cell40 is not null then c.wcdma_near_cell40||',' end ||
          case when c.wcdma_near_cell41 is not null then c.wcdma_near_cell41||',' end ||
          case when c.wcdma_near_cell42 is not null then c.wcdma_near_cell42||',' end ||
          case when c.wcdma_near_cell43 is not null then c.wcdma_near_cell43||',' end ||
          case when c.wcdma_near_cell44 is not null then c.wcdma_near_cell44||',' end ||
          case when c.wcdma_near_cell45 is not null then c.wcdma_near_cell45||',' end ||
          case when c.wcdma_near_cell46 is not null then c.wcdma_near_cell46||',' end ||
          case when c.wcdma_near_cell47 is not null then c.wcdma_near_cell47||',' end ||
          case when c.wcdma_near_cell48 is not null then c.wcdma_near_cell48||',' end ||
          case when c.wcdma_near_cell49 is not null then c.wcdma_near_cell49||',' end ||
          case when c.wcdma_near_cell50 is not null then c.wcdma_near_cell50||',' end ||
          case when c.wcdma_near_cell51 is not null then c.wcdma_near_cell51||',' end ||
          case when c.wcdma_near_cell52 is not null then c.wcdma_near_cell52||',' end ||
          case when c.wcdma_near_cell53 is not null then c.wcdma_near_cell53||',' end ||
          case when c.wcdma_near_cell54 is not null then c.wcdma_near_cell54||',' end ||
          case when c.wcdma_near_cell55 is not null then c.wcdma_near_cell55||',' end ||
          case when c.wcdma_near_cell56 is not null then c.wcdma_near_cell56||',' end ||
          case when c.wcdma_near_cell57 is not null then c.wcdma_near_cell57||',' end ||
          case when c.wcdma_near_cell58 is not null then c.wcdma_near_cell58||',' end ||
          case when c.wcdma_near_cell59 is not null then c.wcdma_near_cell59||',' end ||
          case when c.wcdma_near_cell60 is not null then c.wcdma_near_cell60||',' end ||
          case when c.wcdma_near_cell61 is not null then c.wcdma_near_cell61||',' end ||
          case when c.wcdma_near_cell62 is not null then c.wcdma_near_cell62||',' end ||
          case when c.wcdma_near_cell63 is not null then c.wcdma_near_cell63||',' end ||
          case when c.wcdma_near_cell64 is not null then c.wcdma_near_cell64||',' end as near
      from t_cas_cell c
     where c.lac =  #{lac}
       and c.cid = #{cid}), ','||c.lac||'_'||c.cid||',') > 0
       and instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
	  <!-- 室内外 -->
	  <if test="indoor!=null and indoor!=''">
	   and instr(','||#{indoor}||',',','||indoor||',')>0 
	  </if>
	  <!-- 网络状态-->
	  <if test="modetypes!=null and modetypes!=''">
	  and instr(','||#{modetypes}||',',','||mode_type||',')>0 
	  and  0 &lt; (case when mode_type=1 then instr(','||#{cellBands}||',',','||cell_band||',') when mode_type=0 then 1 else 0 end  )
	  </if>
       and c.LONGITUDE_MODIFY > 0
	   and c.LATITUDE_MODIFY > 0
       order by  c.cell_name
	</select>
	<select id="queryReportNearCellOther"  parameterType="map" resultMap="BaseResultMap" >
		select <include refid="Base_Column_List" />
	     from t_cas_cell c
	    where (c.gsm_near_cell1 = #{lac_cid}
	       or c.gsm_near_cell2 = #{lac_cid}
	       or c.gsm_near_cell3 = #{lac_cid}
	       or c.gsm_near_cell4 = #{lac_cid}
	       or c.gsm_near_cell5 = #{lac_cid}
	       or c.gsm_near_cell6 = #{lac_cid}
	       or c.gsm_near_cell7 = #{lac_cid}
	       or c.gsm_near_cell8 = #{lac_cid}
	       or c.gsm_near_cell9 = #{lac_cid}
	       or c.gsm_near_cell10 = #{lac_cid}
	       or c.gsm_near_cell11 = #{lac_cid}
	       or c.gsm_near_cell12 = #{lac_cid}
	       or c.gsm_near_cell13 = #{lac_cid}
	       or c.gsm_near_cell14 = #{lac_cid}
	       or c.gsm_near_cell15 = #{lac_cid}
	       or c.gsm_near_cell16 = #{lac_cid}
	       or c.gsm_near_cell17 = #{lac_cid}
	       or c.gsm_near_cell18 = #{lac_cid}
	       or c.gsm_near_cell19 = #{lac_cid}
	       or c.gsm_near_cell20 = #{lac_cid}
	       or c.gsm_near_cell21 = #{lac_cid}
	       or c.gsm_near_cell22 = #{lac_cid}
	       or c.gsm_near_cell23 = #{lac_cid}
	       or c.gsm_near_cell24 = #{lac_cid}
	       or c.gsm_near_cell25 = #{lac_cid}
	       or c.gsm_near_cell26 = #{lac_cid}
	       or c.gsm_near_cell27 = #{lac_cid}
	       or c.gsm_near_cell28 = #{lac_cid}
	       or c.gsm_near_cell29 = #{lac_cid}
	       or c.gsm_near_cell30 = #{lac_cid}
	       or c.gsm_near_cell31 = #{lac_cid}
	       or c.gsm_near_cell32 = #{lac_cid}
	       or c.wcdma_near_cell1 = #{lac_cid}
	       or c.wcdma_near_cell2 = #{lac_cid}
	       or c.wcdma_near_cell3 = #{lac_cid}
	       or c.wcdma_near_cell4 = #{lac_cid}
	       or c.wcdma_near_cell5 = #{lac_cid}
	       or c.wcdma_near_cell6 = #{lac_cid}
	       or c.wcdma_near_cell7 = #{lac_cid}
	       or c.wcdma_near_cell8 = #{lac_cid}
	       or c.wcdma_near_cell9 = #{lac_cid}
	       or c.wcdma_near_cell10 = #{lac_cid}
	       or c.wcdma_near_cell11 = #{lac_cid}
	       or c.wcdma_near_cell12 = #{lac_cid}
	       or c.wcdma_near_cell13 = #{lac_cid}
	       or c.wcdma_near_cell14 = #{lac_cid}
	       or c.wcdma_near_cell15 = #{lac_cid}
	       or c.wcdma_near_cell16 = #{lac_cid}
	       or c.wcdma_near_cell17 = #{lac_cid}
	       or c.wcdma_near_cell18 = #{lac_cid}
	       or c.wcdma_near_cell19 = #{lac_cid}
	       or c.wcdma_near_cell20 = #{lac_cid}
	       or c.wcdma_near_cell21 = #{lac_cid}
	       or c.wcdma_near_cell22 = #{lac_cid}
	       or c.wcdma_near_cell23 = #{lac_cid}
	       or c.wcdma_near_cell24 = #{lac_cid}
	       or c.wcdma_near_cell25 = #{lac_cid}
	       or c.wcdma_near_cell26 = #{lac_cid}
	       or c.wcdma_near_cell27 = #{lac_cid}
	       or c.wcdma_near_cell28 = #{lac_cid}
	       or c.wcdma_near_cell29 = #{lac_cid}
	       or c.wcdma_near_cell30 = #{lac_cid}
	       or c.wcdma_near_cell31 = #{lac_cid}
	       or c.wcdma_near_cell32 = #{lac_cid}
	       or c.wcdma_near_cell33 = #{lac_cid}
	       or c.wcdma_near_cell34 = #{lac_cid}
	       or c.wcdma_near_cell35 = #{lac_cid}
	       or c.wcdma_near_cell36 = #{lac_cid}
	       or c.wcdma_near_cell37 = #{lac_cid}
	       or c.wcdma_near_cell38 = #{lac_cid}
	       or c.wcdma_near_cell39 = #{lac_cid}
	       or c.wcdma_near_cell40 = #{lac_cid}
	       or c.wcdma_near_cell41 = #{lac_cid}
	       or c.wcdma_near_cell42 = #{lac_cid}
	       or c.wcdma_near_cell43 = #{lac_cid}
	       or c.wcdma_near_cell44 = #{lac_cid}
	       or c.wcdma_near_cell45 = #{lac_cid}
	       or c.wcdma_near_cell46 = #{lac_cid}
	       or c.wcdma_near_cell47 = #{lac_cid}
	       or c.wcdma_near_cell48 = #{lac_cid}
	       or c.wcdma_near_cell49 = #{lac_cid}
	       or c.wcdma_near_cell50 = #{lac_cid}
	       or c.wcdma_near_cell51 = #{lac_cid}
	       or c.wcdma_near_cell52 = #{lac_cid}
	       or c.wcdma_near_cell53 = #{lac_cid}
	       or c.wcdma_near_cell54 = #{lac_cid}
	       or c.wcdma_near_cell55 = #{lac_cid}
	       or c.wcdma_near_cell56 = #{lac_cid}
	       or c.wcdma_near_cell57 = #{lac_cid}
	       or c.wcdma_near_cell58 = #{lac_cid}
	       or c.wcdma_near_cell59 = #{lac_cid}
	       or c.wcdma_near_cell60 = #{lac_cid}
	       or c.wcdma_near_cell61 = #{lac_cid}
	       or c.wcdma_near_cell62 = #{lac_cid}
	       or c.wcdma_near_cell63 = #{lac_cid}
	       or c.wcdma_near_cell64 = #{lac_cid})
	       and instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
		  <!-- 室内外 -->
		  <if test="indoor!=null and indoor!=''">
		   and instr(','||#{indoor}||',',','||indoor||',')>0 
		  </if>
		  <!-- 网络状态-->
		  <if test="modetypes!=null and modetypes!=''">
		  and instr(','||#{modetypes}||',',','||mode_type||',')>0 
		  and  0 &lt; (case when mode_type=1 then instr(','||#{cellBands}||',',','||cell_band||',') when mode_type=0 then 1 else 0 end  )
		  </if>
	       and c.LONGITUDE_MODIFY > 0
		   and c.LATITUDE_MODIFY > 0
	       order by  c.cell_name
	</select>
	
	<select id="countRegiondown"  resultType="java.lang.Integer" parameterType="map">
	select
		 count(0)
		  from t_cas_cell where
		  <!-- 区域 -->
		  instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1)
		  <!-- 室内外 -->
		  <if test="indoor!=null and indoor!=''">
		   and instr(','||#{indoor}||',',','||indoor||',')>0 
		  </if>
		  <!-- 网络状态-->
		  <if test="modetypes!=null and modetypes!=''">
		  and instr(','||#{modetypes}||',',','||mode_type||',')>0 
		  and  0 &lt; (case when mode_type=1 then instr(','||#{cellBands}||',',','||cell_band||',') when mode_type=0 then 1 else 0 end  )
		  </if>
		  <!-- 频段
		  <if test="cellBands!=null and cellBands!=''">
		  case when instr(','||#{modetypes}||',',',2,') > 0 then 
		  and instr(','||#{cellBands}||',',','||cell_band||',')>0 
		  </if>-->
		  <!-- 框选导出 -->
		  <if test="minlat!=null and minlat!=''">
		  and LATITUDE_MODIFY &gt;= #{minlat} 
		  </if>
		  <if test="maxlat!=null and maxlat!=''">
		  and LATITUDE_MODIFY &lt;= #{maxlat} 
		  </if>
		  <if test="minlng!=null and minlng!=''">
		  and LONGITUDE_MODIFY &gt;= #{minlng} 
		  </if>
		  <if test="maxlng!=null and maxlng!=''">
		  and LONGITUDE_MODIFY &lt;= #{maxlng} 
		  </if>
	</select>
	<select id="queryReportCellById" parameterType="map" resultMap="BaseResultMap">
	 select  <include refid="Base_Column_List" />
	  from t_cas_cell c,t_cas_base b
	  where c.bid=b.bid 
	  and c.lac=#{lac} 
	  and c.cid=#{cid}
	  and c.LONGITUDE_MODIFY > 0
      and c.LATITUDE_MODIFY > 0
	</select>
	<select id="queryReportLoadCells" resultType="com.complaint.model.ReportCells" parameterType="map">
          select *
            from(
                select  lac_a lac,
                        cid_b cid,
                        area_id,
                        admin_region areaname,
                        cell_name cellname,
                        cell_band cellband,
                        up_freq upfreq,
                        down_freq downfreq,
                        psc,
                        bsc_name bscname,
                        bsic,
                        ant_azimuth,
                        ant_elect_angle,
                        longitude,
                        latitude,
                        shared_ant sharedant,
                        mode_type,
                        lac_cid||'_'||near_type lac_cid,
                        dense_rank() over(partition by lac_a, cid_b order by near_type,lac_cid) dk
                        from(
                            select b.lac_a,
                                   b.cid_b,
                                   b.indoor,
                                   b.cell_band,
                                   b.mode_type,
                                   b.lac||'_'||b.cid lac_cid,
                                   b.area_id,
                                   b.cell_name,
                                   b.psc,
                                   b.bsc_name,
                                   b.bsic,
                                   b.ant_azimuth,
                                   b.ant_elect_angle,
                                   b.longitude,
                                   b.latitude,
                                   b.shared_ant,
                                   b.up_freq,
                                   b.down_freq,
                                   b.admin_region,
                                  case when a.mode_type=0 then 
                                   case when a.mode_type = b.mode_type and a.up_freq = b.up_freq and a.down_freq = b.down_freq then 0   
                                        when a.mode_type = b.mode_type and a.up_freq &lt;&gt; b.up_freq and a.down_freq &lt;&gt; b.down_freq then 1 
                                   else 2                                                                                               
                                   end  
                                   when a.mode_type=1 then  
                                    case when a.mode_type = b.mode_type and a.cell_band = b.cell_band then 0   
                                        when a.mode_type = b.mode_type and a.cell_band &lt;&gt; b.cell_band  then 1 
                                   else 2  end else 2 end near_type
                              from t_cas_cell a, (select mode_type,
                                                         lac lac_a,
                                                         cid cid_b,
                                                         indoor,
                                                         to_number(substr(deptsal,1,instr(deptsal,'_')-1)) lac,
                                                         to_char(substr(deptsal,instr(deptsal,'_')+1,length(deptsal))) cid,
                                                         up_freq,
                                                         down_freq,
                                                         cell_band,
                                                         area_id,
                                                         cell_name,
                                                         psc,
                                                         bsc_name,
                                                         bsic,
                                                         ant_azimuth,
                                                         ant_elect_angle,
                                                         longitude,
                                                         latitude,
                                                         shared_ant,
                                                         admin_region
                                                    from t_cas_cell
                                                 unpivot (
                                                          deptsal
                                                          for saldesc
                                                          in (wcdma_near_cell1, wcdma_near_cell2, wcdma_near_cell3, wcdma_near_cell4, wcdma_near_cell5, 
                                                              wcdma_near_cell6, wcdma_near_cell7, wcdma_near_cell8, wcdma_near_cell9, wcdma_near_cell10, 
                                                              wcdma_near_cell11, wcdma_near_cell12, wcdma_near_cell13, wcdma_near_cell14, wcdma_near_cell15, 
                                                              wcdma_near_cell16, wcdma_near_cell17, wcdma_near_cell18, wcdma_near_cell19, wcdma_near_cell20, 
                                                              wcdma_near_cell21, wcdma_near_cell22, wcdma_near_cell23, wcdma_near_cell24, wcdma_near_cell25, 
                                                              wcdma_near_cell26, wcdma_near_cell27, wcdma_near_cell28, wcdma_near_cell29, wcdma_near_cell30, 
                                                              wcdma_near_cell31, wcdma_near_cell32, wcdma_near_cell33, wcdma_near_cell34, wcdma_near_cell35, 
                                                              wcdma_near_cell36, wcdma_near_cell37, wcdma_near_cell38, wcdma_near_cell39, wcdma_near_cell40, 
                                                              wcdma_near_cell41, wcdma_near_cell42, wcdma_near_cell43, wcdma_near_cell44, wcdma_near_cell45, 
                                                              wcdma_near_cell46, wcdma_near_cell47, wcdma_near_cell48, wcdma_near_cell49, wcdma_near_cell50, 
                                                              wcdma_near_cell51, wcdma_near_cell52, wcdma_near_cell53, wcdma_near_cell54, wcdma_near_cell55, 
                                                              wcdma_near_cell56, wcdma_near_cell57, wcdma_near_cell58, wcdma_near_cell59, wcdma_near_cell60, 
                                                              wcdma_near_cell61, wcdma_near_cell62, wcdma_near_cell63, wcdma_near_cell64, gsm_near_cell1, 
                                                              gsm_near_cell2, gsm_near_cell3, gsm_near_cell4, gsm_near_cell5, gsm_near_cell6, gsm_near_cell7, 
                                                              gsm_near_cell8, gsm_near_cell9, gsm_near_cell10, gsm_near_cell11, gsm_near_cell12, gsm_near_cell13, 
                                                              gsm_near_cell14, gsm_near_cell15, gsm_near_cell16, gsm_near_cell17, gsm_near_cell18, gsm_near_cell19, 
                                                              gsm_near_cell20, gsm_near_cell21, gsm_near_cell22, gsm_near_cell23, gsm_near_cell24, gsm_near_cell25, 
                                                              gsm_near_cell26, gsm_near_cell27, gsm_near_cell28, gsm_near_cell29, gsm_near_cell30, gsm_near_cell31, 
                                                              gsm_near_cell32)
                                                    )
                                                    <!-- 室内外 -->
								  
                                              ) b
                       where a.lac = b.lac and to_char(a.cid) = b.cid 
                       
                  )  
                  where  instr(','||#{areaids,jdbcType=VARCHAR}||',',','||to_char(area_id)||',')>decode(instr(','||#{areaids,jdbcType=VARCHAR}||',',',-1,'),0,0,-1) 
                  <if test="indoor!=null and indoor!=''">
				   and instr(','||#{indoor}||',',','||indoor||',')>0 
				  </if>
				  <!-- 网络状态-->
				  <if test="modetypes!=null and modetypes!=''">
				    and instr(','||#{modetypes}||',',','||mode_type||',')>0 
				    and decode(mode_type, 1, instr(','||#{cellBands}||',', ',' || cell_band || ','), 0, 1, 0) > 0
				  </if> 
				   <if test="nearrel!=null and nearrel!=''">
				   and instr(','||#{nearrel}||',',','||near_type||',')>0 
				   </if>
				  
				  
          )
       pivot
       (
           max(lac_cid) lac_cid
           for(dk) in (
              1 as a1,2 as a2,3 as a3,4 as a4,5 as a5,6 as a6,7 as a7,8 as a8,9 as a9,10 as a10,
              11 as a11,12 as a12,13 as a13,14 as a14,15 as a15,16 as a16,17 as a17,18 as a18,19 as a19,20 as a20,
              21 as a21,22 as a22,23 as a23,24 as a24,25 as a25,26 as a26,27 as a27,28 as a28,29 as a29,30 as a30,
              31 as a31,32 as a32,33 as a33,34 as a34,35 as a35,36 as a36,37 as a37,38 as a38,39 as a39,40 as a40,
              41 as a41,42 as a42,43 as a43,44 as a44,45 as a45,46 as a46,47 as a47,48 as a48,49 as a49,50 as a50,
              51 as a51,52 as a52,53 as a53,54 as a54,55 as a55,56 as a56,57 as a57,58 as a58,59 as a59,60 as a60,
              61 as a61,62 as a62,63 as a63,64 as a64,65 as a65,66 as a66,67 as a67,68 as a68,69 as a69,70 as a70,
              71 as a71,72 as a72,73 as a73,74 as a74,75 as a75,76 as a76,77 as a77,78 as a78,79 as a79,80 as a80,
              81 as a81,82 as a82,83 as a83,84 as a84,85 as a85,86 as a86,87 as a87,88 as a88,89 as a89,90 as a90,
              91 as a91,92 as a92,93 as a93,94 as a94,95 as a95,96 as a96
           )
       )  order by area_id asc,mode_type asc


	</select>
</mapper>
